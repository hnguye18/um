
./um:     file format elf64-x86-64


Disassembly of section .init:

0000000000400a18 <_init>:
  400a18:	f3 0f 1e fa          	endbr64 
  400a1c:	48 83 ec 08          	sub    $0x8,%rsp
  400a20:	48 8b 05 c1 35 20 00 	mov    0x2035c1(%rip),%rax        # 603fe8 <__gmon_start__@Base>
  400a27:	48 85 c0             	test   %rax,%rax
  400a2a:	74 02                	je     400a2e <_init+0x16>
  400a2c:	ff d0                	callq  *%rax
  400a2e:	48 83 c4 08          	add    $0x8,%rsp
  400a32:	c3                   	retq   

Disassembly of section .plt:

0000000000400a40 <.plt>:
  400a40:	ff 35 c2 35 20 00    	pushq  0x2035c2(%rip)        # 604008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400a46:	ff 25 c4 35 20 00    	jmpq   *0x2035c4(%rip)        # 604010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400a4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a50 <free@plt>:
  400a50:	ff 25 c2 35 20 00    	jmpq   *0x2035c2(%rip)        # 604018 <free@GLIBC_2.2.5>
  400a56:	68 00 00 00 00       	pushq  $0x0
  400a5b:	e9 e0 ff ff ff       	jmpq   400a40 <.plt>

0000000000400a60 <abort@plt>:
  400a60:	ff 25 ba 35 20 00    	jmpq   *0x2035ba(%rip)        # 604020 <abort@GLIBC_2.2.5>
  400a66:	68 01 00 00 00       	pushq  $0x1
  400a6b:	e9 d0 ff ff ff       	jmpq   400a40 <.plt>

0000000000400a70 <fclose@plt>:
  400a70:	ff 25 b2 35 20 00    	jmpq   *0x2035b2(%rip)        # 604028 <fclose@GLIBC_2.2.5>
  400a76:	68 02 00 00 00       	pushq  $0x2
  400a7b:	e9 c0 ff ff ff       	jmpq   400a40 <.plt>

0000000000400a80 <fgetc@plt>:
  400a80:	ff 25 aa 35 20 00    	jmpq   *0x2035aa(%rip)        # 604030 <fgetc@GLIBC_2.2.5>
  400a86:	68 03 00 00 00       	pushq  $0x3
  400a8b:	e9 b0 ff ff ff       	jmpq   400a40 <.plt>

0000000000400a90 <calloc@plt>:
  400a90:	ff 25 a2 35 20 00    	jmpq   *0x2035a2(%rip)        # 604038 <calloc@GLIBC_2.2.5>
  400a96:	68 04 00 00 00       	pushq  $0x4
  400a9b:	e9 a0 ff ff ff       	jmpq   400a40 <.plt>

0000000000400aa0 <putc@plt>:
  400aa0:	ff 25 9a 35 20 00    	jmpq   *0x20359a(%rip)        # 604040 <putc@GLIBC_2.2.5>
  400aa6:	68 05 00 00 00       	pushq  $0x5
  400aab:	e9 90 ff ff ff       	jmpq   400a40 <.plt>

0000000000400ab0 <fprintf@plt>:
  400ab0:	ff 25 92 35 20 00    	jmpq   *0x203592(%rip)        # 604048 <fprintf@GLIBC_2.2.5>
  400ab6:	68 06 00 00 00       	pushq  $0x6
  400abb:	e9 80 ff ff ff       	jmpq   400a40 <.plt>

0000000000400ac0 <feof@plt>:
  400ac0:	ff 25 8a 35 20 00    	jmpq   *0x20358a(%rip)        # 604050 <feof@GLIBC_2.2.5>
  400ac6:	68 07 00 00 00       	pushq  $0x7
  400acb:	e9 70 ff ff ff       	jmpq   400a40 <.plt>

0000000000400ad0 <memcpy@plt>:
  400ad0:	ff 25 82 35 20 00    	jmpq   *0x203582(%rip)        # 604058 <memcpy@GLIBC_2.14>
  400ad6:	68 08 00 00 00       	pushq  $0x8
  400adb:	e9 60 ff ff ff       	jmpq   400a40 <.plt>

0000000000400ae0 <__xstat@plt>:
  400ae0:	ff 25 7a 35 20 00    	jmpq   *0x20357a(%rip)        # 604060 <__xstat@GLIBC_2.2.5>
  400ae6:	68 09 00 00 00       	pushq  $0x9
  400aeb:	e9 50 ff ff ff       	jmpq   400a40 <.plt>

0000000000400af0 <malloc@plt>:
  400af0:	ff 25 72 35 20 00    	jmpq   *0x203572(%rip)        # 604068 <malloc@GLIBC_2.2.5>
  400af6:	68 0a 00 00 00       	pushq  $0xa
  400afb:	e9 40 ff ff ff       	jmpq   400a40 <.plt>

0000000000400b00 <fflush@plt>:
  400b00:	ff 25 6a 35 20 00    	jmpq   *0x20356a(%rip)        # 604070 <fflush@GLIBC_2.2.5>
  400b06:	68 0b 00 00 00       	pushq  $0xb
  400b0b:	e9 30 ff ff ff       	jmpq   400a40 <.plt>

0000000000400b10 <realloc@plt>:
  400b10:	ff 25 62 35 20 00    	jmpq   *0x203562(%rip)        # 604078 <realloc@GLIBC_2.2.5>
  400b16:	68 0c 00 00 00       	pushq  $0xc
  400b1b:	e9 20 ff ff ff       	jmpq   400a40 <.plt>

0000000000400b20 <longjmp@plt>:
  400b20:	ff 25 5a 35 20 00    	jmpq   *0x20355a(%rip)        # 604080 <longjmp@GLIBC_2.2.5>
  400b26:	68 0d 00 00 00       	pushq  $0xd
  400b2b:	e9 10 ff ff ff       	jmpq   400a40 <.plt>

0000000000400b30 <fopen@plt>:
  400b30:	ff 25 52 35 20 00    	jmpq   *0x203552(%rip)        # 604088 <fopen@GLIBC_2.2.5>
  400b36:	68 0e 00 00 00       	pushq  $0xe
  400b3b:	e9 00 ff ff ff       	jmpq   400a40 <.plt>

0000000000400b40 <exit@plt>:
  400b40:	ff 25 4a 35 20 00    	jmpq   *0x20354a(%rip)        # 604090 <exit@GLIBC_2.2.5>
  400b46:	68 0f 00 00 00       	pushq  $0xf
  400b4b:	e9 f0 fe ff ff       	jmpq   400a40 <.plt>

0000000000400b50 <fwrite@plt>:
  400b50:	ff 25 42 35 20 00    	jmpq   *0x203542(%rip)        # 604098 <fwrite@GLIBC_2.2.5>
  400b56:	68 10 00 00 00       	pushq  $0x10
  400b5b:	e9 e0 fe ff ff       	jmpq   400a40 <.plt>

0000000000400b60 <getc@plt>:
  400b60:	ff 25 3a 35 20 00    	jmpq   *0x20353a(%rip)        # 6040a0 <getc@GLIBC_2.2.5>
  400b66:	68 11 00 00 00       	pushq  $0x11
  400b6b:	e9 d0 fe ff ff       	jmpq   400a40 <.plt>

Disassembly of section .text:

0000000000400b70 <main>:
  400b70:	41 55                	push   %r13
  400b72:	41 54                	push   %r12
  400b74:	55                   	push   %rbp
  400b75:	53                   	push   %rbx
  400b76:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  400b7d:	83 ff 02             	cmp    $0x2,%edi
  400b80:	74 2e                	je     400bb0 <main+0x40>
  400b82:	ba 16 00 00 00       	mov    $0x16,%edx
  400b87:	be 01 00 00 00       	mov    $0x1,%esi
  400b8c:	bf 46 2d 40 00       	mov    $0x402d46,%edi
  400b91:	48 8b 0d 48 35 20 00 	mov    0x203548(%rip),%rcx        # 6040e0 <stderr@@GLIBC_2.2.5>
  400b98:	e8 b3 ff ff ff       	callq  400b50 <fwrite@plt>
  400b9d:	b8 01 00 00 00       	mov    $0x1,%eax
  400ba2:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  400ba9:	5b                   	pop    %rbx
  400baa:	5d                   	pop    %rbp
  400bab:	41 5c                	pop    %r12
  400bad:	41 5d                	pop    %r13
  400baf:	c3                   	retq   
  400bb0:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400bb4:	48 89 f3             	mov    %rsi,%rbx
  400bb7:	be 5d 2d 40 00       	mov    $0x402d5d,%esi
  400bbc:	e8 6f ff ff ff       	callq  400b30 <fopen@plt>
  400bc1:	49 89 c4             	mov    %rax,%r12
  400bc4:	48 85 c0             	test   %rax,%rax
  400bc7:	74 63                	je     400c2c <main+0xbc>
  400bc9:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  400bcd:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  400bd2:	bf 01 00 00 00       	mov    $0x1,%edi
  400bd7:	e8 04 ff ff ff       	callq  400ae0 <__xstat@plt>
  400bdc:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  400be1:	b9 04 00 00 00       	mov    $0x4,%ecx
  400be6:	48 99                	cqto   
  400be8:	48 f7 f9             	idiv   %rcx
  400beb:	89 c7                	mov    %eax,%edi
  400bed:	49 89 c5             	mov    %rax,%r13
  400bf0:	e8 2b 10 00 00       	callq  401c20 <um_new>
  400bf5:	44 89 ea             	mov    %r13d,%edx
  400bf8:	4c 89 e6             	mov    %r12,%rsi
  400bfb:	48 89 c7             	mov    %rax,%rdi
  400bfe:	48 89 c5             	mov    %rax,%rbp
  400c01:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  400c06:	e8 d5 11 00 00       	callq  401de0 <populate_seg_zero>
  400c0b:	4c 89 e7             	mov    %r12,%rdi
  400c0e:	e8 5d fe ff ff       	callq  400a70 <fclose@plt>
  400c13:	48 89 ef             	mov    %rbp,%rdi
  400c16:	e8 55 0e 00 00       	callq  401a70 <um_execute>
  400c1b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  400c20:	e8 7b 03 00 00       	callq  400fa0 <um_free>
  400c25:	31 c0                	xor    %eax,%eax
  400c27:	e9 76 ff ff ff       	jmpq   400ba2 <main+0x32>
  400c2c:	ba 2c 00 00 00       	mov    $0x2c,%edx
  400c31:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  400c36:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  400c3b:	e8 80 12 00 00       	callq  401ec0 <Except_raise>
  400c40:	eb 87                	jmp    400bc9 <main+0x59>

0000000000400c42 <.annobin_elf_init.c.hot>:
  400c42:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400c49:	00 00 00 
  400c4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c50 <_start>:
  400c50:	f3 0f 1e fa          	endbr64 
  400c54:	31 ed                	xor    %ebp,%ebp
  400c56:	49 89 d1             	mov    %rdx,%r9
  400c59:	5e                   	pop    %rsi
  400c5a:	48 89 e2             	mov    %rsp,%rdx
  400c5d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400c61:	50                   	push   %rax
  400c62:	54                   	push   %rsp
  400c63:	49 c7 c0 20 2d 40 00 	mov    $0x402d20,%r8
  400c6a:	48 c7 c1 b0 2c 40 00 	mov    $0x402cb0,%rcx
  400c71:	48 c7 c7 70 0b 40 00 	mov    $0x400b70,%rdi
  400c78:	ff 15 62 33 20 00    	callq  *0x203362(%rip)        # 603fe0 <__libc_start_main@GLIBC_2.2.5>
  400c7e:	f4                   	hlt    

0000000000400c7f <.annobin_init.c>:
  400c7f:	90                   	nop

0000000000400c80 <_dl_relocate_static_pie>:
  400c80:	f3 0f 1e fa          	endbr64 
  400c84:	c3                   	retq   

0000000000400c85 <.annobin__dl_relocate_static_pie.end>:
  400c85:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400c8c:	00 00 00 
  400c8f:	90                   	nop

0000000000400c90 <deregister_tm_clones>:
  400c90:	48 8d 3d 21 34 20 00 	lea    0x203421(%rip),%rdi        # 6040b8 <__TMC_END__>
  400c97:	48 8d 05 1a 34 20 00 	lea    0x20341a(%rip),%rax        # 6040b8 <__TMC_END__>
  400c9e:	48 39 f8             	cmp    %rdi,%rax
  400ca1:	74 15                	je     400cb8 <deregister_tm_clones+0x28>
  400ca3:	48 8b 05 2e 33 20 00 	mov    0x20332e(%rip),%rax        # 603fd8 <_ITM_deregisterTMCloneTable@Base>
  400caa:	48 85 c0             	test   %rax,%rax
  400cad:	74 09                	je     400cb8 <deregister_tm_clones+0x28>
  400caf:	ff e0                	jmpq   *%rax
  400cb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400cb8:	c3                   	retq   
  400cb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400cc0 <register_tm_clones>:
  400cc0:	48 8d 3d f1 33 20 00 	lea    0x2033f1(%rip),%rdi        # 6040b8 <__TMC_END__>
  400cc7:	48 8d 35 ea 33 20 00 	lea    0x2033ea(%rip),%rsi        # 6040b8 <__TMC_END__>
  400cce:	48 29 fe             	sub    %rdi,%rsi
  400cd1:	48 89 f0             	mov    %rsi,%rax
  400cd4:	48 c1 ee 3f          	shr    $0x3f,%rsi
  400cd8:	48 c1 f8 03          	sar    $0x3,%rax
  400cdc:	48 01 c6             	add    %rax,%rsi
  400cdf:	48 d1 fe             	sar    %rsi
  400ce2:	74 14                	je     400cf8 <register_tm_clones+0x38>
  400ce4:	48 8b 05 05 33 20 00 	mov    0x203305(%rip),%rax        # 603ff0 <_ITM_registerTMCloneTable@Base>
  400ceb:	48 85 c0             	test   %rax,%rax
  400cee:	74 08                	je     400cf8 <register_tm_clones+0x38>
  400cf0:	ff e0                	jmpq   *%rax
  400cf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400cf8:	c3                   	retq   
  400cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400d00 <__do_global_dtors_aux>:
  400d00:	f3 0f 1e fa          	endbr64 
  400d04:	80 3d dd 33 20 00 00 	cmpb   $0x0,0x2033dd(%rip)        # 6040e8 <completed.0>
  400d0b:	75 13                	jne    400d20 <__do_global_dtors_aux+0x20>
  400d0d:	55                   	push   %rbp
  400d0e:	48 89 e5             	mov    %rsp,%rbp
  400d11:	e8 7a ff ff ff       	callq  400c90 <deregister_tm_clones>
  400d16:	c6 05 cb 33 20 00 01 	movb   $0x1,0x2033cb(%rip)        # 6040e8 <completed.0>
  400d1d:	5d                   	pop    %rbp
  400d1e:	c3                   	retq   
  400d1f:	90                   	nop
  400d20:	c3                   	retq   
  400d21:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400d28:	00 00 00 00 
  400d2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400d30 <frame_dummy>:
  400d30:	f3 0f 1e fa          	endbr64 
  400d34:	eb 8a                	jmp    400cc0 <register_tm_clones>
  400d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d3d:	00 00 00 

0000000000400d40 <load_program>:
  400d40:	41 57                	push   %r15
  400d42:	89 c8                	mov    %ecx,%eax
  400d44:	41 56                	push   %r14
  400d46:	09 d0                	or     %edx,%eax
  400d48:	49 89 fe             	mov    %rdi,%r14
  400d4b:	41 55                	push   %r13
  400d4d:	09 f0                	or     %esi,%eax
  400d4f:	41 54                	push   %r12
  400d51:	55                   	push   %rbp
  400d52:	89 d5                	mov    %edx,%ebp
  400d54:	53                   	push   %rbx
  400d55:	48 83 ec 28          	sub    $0x28,%rsp
  400d59:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
  400d5d:	83 f8 07             	cmp    $0x7,%eax
  400d60:	0f 86 3a 01 00 00    	jbe    400ea0 <load_program+0x160>
  400d66:	ba d7 00 00 00       	mov    $0xd7,%edx
  400d6b:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  400d70:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  400d75:	e8 46 11 00 00       	callq  401ec0 <Except_raise>
  400d7a:	49 8b 1e             	mov    (%r14),%rbx
  400d7d:	83 fd 07             	cmp    $0x7,%ebp
  400d80:	0f 87 ea 00 00 00    	ja     400e70 <load_program+0x130>
  400d86:	48 8b 3b             	mov    (%rbx),%rdi
  400d89:	89 ee                	mov    %ebp,%esi
  400d8b:	e8 d0 19 00 00       	callq  402760 <UArray_at>
  400d90:	8b 30                	mov    (%rax),%esi
  400d92:	85 f6                	test   %esi,%esi
  400d94:	0f 84 98 00 00 00    	je     400e32 <load_program+0xf2>
  400d9a:	49 8b 46 08          	mov    0x8(%r14),%rax
  400d9e:	48 8b 38             	mov    (%rax),%rdi
  400da1:	e8 ea 13 00 00       	callq  402190 <Seq_get>
  400da6:	48 89 c5             	mov    %rax,%rbp
  400da9:	48 85 c0             	test   %rax,%rax
  400dac:	0f 84 0e 01 00 00    	je     400ec0 <load_program+0x180>
  400db2:	48 89 ef             	mov    %rbp,%rdi
  400db5:	31 db                	xor    %ebx,%ebx
  400db7:	e8 24 1a 00 00       	callq  4027e0 <UArray_length>
  400dbc:	48 89 ef             	mov    %rbp,%rdi
  400dbf:	41 89 c4             	mov    %eax,%r12d
  400dc2:	e8 49 1a 00 00       	callq  402810 <UArray_size>
  400dc7:	44 89 e7             	mov    %r12d,%edi
  400dca:	89 c6                	mov    %eax,%esi
  400dcc:	e8 8f 18 00 00       	callq  402660 <UArray_new>
  400dd1:	49 89 c5             	mov    %rax,%r13
  400dd4:	45 85 e4             	test   %r12d,%r12d
  400dd7:	7e 2b                	jle    400e04 <load_program+0xc4>
  400dd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400de0:	89 de                	mov    %ebx,%esi
  400de2:	48 89 ef             	mov    %rbp,%rdi
  400de5:	e8 76 19 00 00       	callq  402760 <UArray_at>
  400dea:	89 de                	mov    %ebx,%esi
  400dec:	4c 89 ef             	mov    %r13,%rdi
  400def:	83 c3 01             	add    $0x1,%ebx
  400df2:	49 89 c7             	mov    %rax,%r15
  400df5:	e8 66 19 00 00       	callq  402760 <UArray_at>
  400dfa:	41 8b 17             	mov    (%r15),%edx
  400dfd:	89 10                	mov    %edx,(%rax)
  400dff:	41 39 dc             	cmp    %ebx,%r12d
  400e02:	75 dc                	jne    400de0 <load_program+0xa0>
  400e04:	49 8b 46 08          	mov    0x8(%r14),%rax
  400e08:	31 f6                	xor    %esi,%esi
  400e0a:	48 8b 38             	mov    (%rax),%rdi
  400e0d:	e8 7e 13 00 00       	callq  402190 <Seq_get>
  400e12:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
  400e17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400e1c:	e8 cf 18 00 00       	callq  4026f0 <UArray_free>
  400e21:	49 8b 46 08          	mov    0x8(%r14),%rax
  400e25:	4c 89 ea             	mov    %r13,%rdx
  400e28:	31 f6                	xor    %esi,%esi
  400e2a:	48 8b 38             	mov    (%rax),%rdi
  400e2d:	e8 de 13 00 00       	callq  402210 <Seq_put>
  400e32:	83 7c 24 0c 07       	cmpl   $0x7,0xc(%rsp)
  400e37:	49 8b 1e             	mov    (%r14),%rbx
  400e3a:	76 14                	jbe    400e50 <load_program+0x110>
  400e3c:	ba 00 02 00 00       	mov    $0x200,%edx
  400e41:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  400e46:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  400e4b:	e8 70 10 00 00       	callq  401ec0 <Except_raise>
  400e50:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  400e54:	48 8b 3b             	mov    (%rbx),%rdi
  400e57:	e8 04 19 00 00       	callq  402760 <UArray_at>
  400e5c:	8b 00                	mov    (%rax),%eax
  400e5e:	48 83 c4 28          	add    $0x28,%rsp
  400e62:	5b                   	pop    %rbx
  400e63:	5d                   	pop    %rbp
  400e64:	41 5c                	pop    %r12
  400e66:	41 5d                	pop    %r13
  400e68:	41 5e                	pop    %r14
  400e6a:	41 5f                	pop    %r15
  400e6c:	c3                   	retq   
  400e6d:	0f 1f 00             	nopl   (%rax)
  400e70:	ba 00 02 00 00       	mov    $0x200,%edx
  400e75:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  400e7a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  400e7f:	e8 3c 10 00 00       	callq  401ec0 <Except_raise>
  400e84:	48 8b 3b             	mov    (%rbx),%rdi
  400e87:	89 ee                	mov    %ebp,%esi
  400e89:	e8 d2 18 00 00       	callq  402760 <UArray_at>
  400e8e:	8b 30                	mov    (%rax),%esi
  400e90:	85 f6                	test   %esi,%esi
  400e92:	0f 85 02 ff ff ff    	jne    400d9a <load_program+0x5a>
  400e98:	eb 98                	jmp    400e32 <load_program+0xf2>
  400e9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400ea0:	48 8b 07             	mov    (%rdi),%rax
  400ea3:	89 d6                	mov    %edx,%esi
  400ea5:	48 8b 38             	mov    (%rax),%rdi
  400ea8:	e8 b3 18 00 00       	callq  402760 <UArray_at>
  400ead:	8b 30                	mov    (%rax),%esi
  400eaf:	85 f6                	test   %esi,%esi
  400eb1:	0f 85 e3 fe ff ff    	jne    400d9a <load_program+0x5a>
  400eb7:	49 8b 1e             	mov    (%r14),%rbx
  400eba:	eb 94                	jmp    400e50 <load_program+0x110>
  400ebc:	0f 1f 40 00          	nopl   0x0(%rax)
  400ec0:	ba e2 00 00 00       	mov    $0xe2,%edx
  400ec5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  400eca:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  400ecf:	e8 ec 0f 00 00       	callq  401ec0 <Except_raise>
  400ed4:	e9 d9 fe ff ff       	jmpq   400db2 <load_program+0x72>
  400ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400ee0 <memory_free>:
  400ee0:	41 55                	push   %r13
  400ee2:	41 54                	push   %r12
  400ee4:	55                   	push   %rbp
  400ee5:	48 89 fd             	mov    %rdi,%rbp
  400ee8:	53                   	push   %rbx
  400ee9:	48 83 ec 18          	sub    $0x18,%rsp
  400eed:	48 8b 07             	mov    (%rdi),%rax
  400ef0:	4c 8b 28             	mov    (%rax),%r13
  400ef3:	4c 89 ef             	mov    %r13,%rdi
  400ef6:	e8 65 12 00 00       	callq  402160 <Seq_length>
  400efb:	85 c0                	test   %eax,%eax
  400efd:	7e 2d                	jle    400f2c <memory_free+0x4c>
  400eff:	41 89 c4             	mov    %eax,%r12d
  400f02:	31 db                	xor    %ebx,%ebx
  400f04:	0f 1f 40 00          	nopl   0x0(%rax)
  400f08:	4c 89 ef             	mov    %r13,%rdi
  400f0b:	e8 a0 13 00 00       	callq  4022b0 <Seq_remhi>
  400f10:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  400f15:	48 85 c0             	test   %rax,%rax
  400f18:	74 0a                	je     400f24 <memory_free+0x44>
  400f1a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  400f1f:	e8 cc 17 00 00       	callq  4026f0 <UArray_free>
  400f24:	83 c3 01             	add    $0x1,%ebx
  400f27:	41 39 dc             	cmp    %ebx,%r12d
  400f2a:	75 dc                	jne    400f08 <memory_free+0x28>
  400f2c:	48 8b 45 00          	mov    0x0(%rbp),%rax
  400f30:	4c 89 28             	mov    %r13,(%rax)
  400f33:	4c 8b 68 08          	mov    0x8(%rax),%r13
  400f37:	4c 89 ef             	mov    %r13,%rdi
  400f3a:	e8 21 12 00 00       	callq  402160 <Seq_length>
  400f3f:	41 89 c4             	mov    %eax,%r12d
  400f42:	85 c0                	test   %eax,%eax
  400f44:	7e 22                	jle    400f68 <memory_free+0x88>
  400f46:	31 db                	xor    %ebx,%ebx
  400f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400f4f:	00 
  400f50:	4c 89 ef             	mov    %r13,%rdi
  400f53:	83 c3 01             	add    $0x1,%ebx
  400f56:	e8 55 13 00 00       	callq  4022b0 <Seq_remhi>
  400f5b:	48 89 c7             	mov    %rax,%rdi
  400f5e:	e8 ed fa ff ff       	callq  400a50 <free@plt>
  400f63:	41 39 dc             	cmp    %ebx,%r12d
  400f66:	75 e8                	jne    400f50 <memory_free+0x70>
  400f68:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  400f6c:	4c 89 6f 08          	mov    %r13,0x8(%rdi)
  400f70:	e8 9b 11 00 00       	callq  402110 <Seq_free>
  400f75:	48 8b 45 00          	mov    0x0(%rbp),%rax
  400f79:	48 8d 78 08          	lea    0x8(%rax),%rdi
  400f7d:	e8 8e 11 00 00       	callq  402110 <Seq_free>
  400f82:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  400f86:	48 83 c4 18          	add    $0x18,%rsp
  400f8a:	5b                   	pop    %rbx
  400f8b:	5d                   	pop    %rbp
  400f8c:	41 5c                	pop    %r12
  400f8e:	41 5d                	pop    %r13
  400f90:	e9 bb fa ff ff       	jmpq   400a50 <free@plt>
  400f95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400f9c:	00 00 00 00 

0000000000400fa0 <um_free>:
  400fa0:	55                   	push   %rbp
  400fa1:	53                   	push   %rbx
  400fa2:	48 89 fb             	mov    %rdi,%rbx
  400fa5:	48 83 ec 08          	sub    $0x8,%rsp
  400fa9:	48 8b 2f             	mov    (%rdi),%rbp
  400fac:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  400fb0:	e8 3b 17 00 00       	callq  4026f0 <UArray_free>
  400fb5:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  400fb9:	e8 92 fa ff ff       	callq  400a50 <free@plt>
  400fbe:	48 8b 03             	mov    (%rbx),%rax
  400fc1:	48 8d 78 08          	lea    0x8(%rax),%rdi
  400fc5:	e8 16 ff ff ff       	callq  400ee0 <memory_free>
  400fca:	48 8b 3b             	mov    (%rbx),%rdi
  400fcd:	48 83 c4 08          	add    $0x8,%rsp
  400fd1:	5b                   	pop    %rbx
  400fd2:	5d                   	pop    %rbp
  400fd3:	e9 78 fa ff ff       	jmpq   400a50 <free@plt>
  400fd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400fdf:	00 

0000000000400fe0 <memory_put>:
  400fe0:	41 54                	push   %r12
  400fe2:	41 89 d4             	mov    %edx,%r12d
  400fe5:	55                   	push   %rbp
  400fe6:	53                   	push   %rbx
  400fe7:	48 8b 3f             	mov    (%rdi),%rdi
  400fea:	89 cb                	mov    %ecx,%ebx
  400fec:	e8 9f 11 00 00       	callq  402190 <Seq_get>
  400ff1:	48 89 c5             	mov    %rax,%rbp
  400ff4:	48 85 c0             	test   %rax,%rax
  400ff7:	74 17                	je     401010 <memory_put+0x30>
  400ff9:	44 89 e6             	mov    %r12d,%esi
  400ffc:	48 89 ef             	mov    %rbp,%rdi
  400fff:	e8 5c 17 00 00       	callq  402760 <UArray_at>
  401004:	89 18                	mov    %ebx,(%rax)
  401006:	5b                   	pop    %rbx
  401007:	5d                   	pop    %rbp
  401008:	41 5c                	pop    %r12
  40100a:	c3                   	retq   
  40100b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401010:	ba 5a 01 00 00       	mov    $0x15a,%edx
  401015:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40101a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40101f:	e8 9c 0e 00 00       	callq  401ec0 <Except_raise>
  401024:	eb d3                	jmp    400ff9 <memory_put+0x19>
  401026:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40102d:	00 00 00 

0000000000401030 <memory_get>:
  401030:	41 55                	push   %r13
  401032:	41 89 f5             	mov    %esi,%r13d
  401035:	41 54                	push   %r12
  401037:	41 89 d4             	mov    %edx,%r12d
  40103a:	55                   	push   %rbp
  40103b:	48 89 fd             	mov    %rdi,%rbp
  40103e:	48 8b 3f             	mov    (%rdi),%rdi
  401041:	e8 1a 11 00 00       	callq  402160 <Seq_length>
  401046:	44 39 e8             	cmp    %r13d,%eax
  401049:	76 35                	jbe    401080 <memory_get+0x50>
  40104b:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  40104f:	44 89 ee             	mov    %r13d,%esi
  401052:	e8 39 11 00 00       	callq  402190 <Seq_get>
  401057:	48 89 c5             	mov    %rax,%rbp
  40105a:	48 85 c0             	test   %rax,%rax
  40105d:	74 61                	je     4010c0 <memory_get+0x90>
  40105f:	48 89 ef             	mov    %rbp,%rdi
  401062:	e8 79 17 00 00       	callq  4027e0 <UArray_length>
  401067:	44 39 e0             	cmp    %r12d,%eax
  40106a:	76 34                	jbe    4010a0 <memory_get+0x70>
  40106c:	44 89 e6             	mov    %r12d,%esi
  40106f:	48 89 ef             	mov    %rbp,%rdi
  401072:	e8 e9 16 00 00       	callq  402760 <UArray_at>
  401077:	5d                   	pop    %rbp
  401078:	41 5c                	pop    %r12
  40107a:	8b 00                	mov    (%rax),%eax
  40107c:	41 5d                	pop    %r13
  40107e:	c3                   	retq   
  40107f:	90                   	nop
  401080:	ba 6b 01 00 00       	mov    $0x16b,%edx
  401085:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40108a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40108f:	e8 2c 0e 00 00       	callq  401ec0 <Except_raise>
  401094:	eb b5                	jmp    40104b <memory_get+0x1b>
  401096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40109d:	00 00 00 
  4010a0:	ba 6f 01 00 00       	mov    $0x16f,%edx
  4010a5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4010aa:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4010af:	e8 0c 0e 00 00       	callq  401ec0 <Except_raise>
  4010b4:	eb b6                	jmp    40106c <memory_get+0x3c>
  4010b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4010bd:	00 00 00 
  4010c0:	ba 6e 01 00 00       	mov    $0x16e,%edx
  4010c5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4010ca:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4010cf:	e8 ec 0d 00 00       	callq  401ec0 <Except_raise>
  4010d4:	eb 89                	jmp    40105f <memory_get+0x2f>
  4010d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4010dd:	00 00 00 

00000000004010e0 <memory_map>:
  4010e0:	41 56                	push   %r14
  4010e2:	41 55                	push   %r13
  4010e4:	49 89 fd             	mov    %rdi,%r13
  4010e7:	41 54                	push   %r12
  4010e9:	55                   	push   %rbp
  4010ea:	89 f5                	mov    %esi,%ebp
  4010ec:	be 04 00 00 00       	mov    $0x4,%esi
  4010f1:	53                   	push   %rbx
  4010f2:	89 ef                	mov    %ebp,%edi
  4010f4:	e8 67 15 00 00       	callq  402660 <UArray_new>
  4010f9:	49 89 c4             	mov    %rax,%r12
  4010fc:	85 ed                	test   %ebp,%ebp
  4010fe:	74 1f                	je     40111f <memory_map+0x3f>
  401100:	31 db                	xor    %ebx,%ebx
  401102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401108:	89 de                	mov    %ebx,%esi
  40110a:	4c 89 e7             	mov    %r12,%rdi
  40110d:	83 c3 01             	add    $0x1,%ebx
  401110:	e8 4b 16 00 00       	callq  402760 <UArray_at>
  401115:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  40111b:	39 dd                	cmp    %ebx,%ebp
  40111d:	75 e9                	jne    401108 <memory_map+0x28>
  40111f:	49 8b 6d 00          	mov    0x0(%r13),%rbp
  401123:	49 8b 5d 08          	mov    0x8(%r13),%rbx
  401127:	48 89 ef             	mov    %rbp,%rdi
  40112a:	e8 31 10 00 00       	callq  402160 <Seq_length>
  40112f:	48 89 df             	mov    %rbx,%rdi
  401132:	41 89 c6             	mov    %eax,%r14d
  401135:	e8 26 10 00 00       	callq  402160 <Seq_length>
  40113a:	85 c0                	test   %eax,%eax
  40113c:	75 22                	jne    401160 <memory_map+0x80>
  40113e:	4c 89 e6             	mov    %r12,%rsi
  401141:	48 89 ef             	mov    %rbp,%rdi
  401144:	e8 67 12 00 00       	callq  4023b0 <Seq_addhi>
  401149:	49 89 6d 00          	mov    %rbp,0x0(%r13)
  40114d:	44 89 f0             	mov    %r14d,%eax
  401150:	49 89 5d 08          	mov    %rbx,0x8(%r13)
  401154:	5b                   	pop    %rbx
  401155:	5d                   	pop    %rbp
  401156:	41 5c                	pop    %r12
  401158:	41 5d                	pop    %r13
  40115a:	41 5e                	pop    %r14
  40115c:	c3                   	retq   
  40115d:	0f 1f 00             	nopl   (%rax)
  401160:	48 89 df             	mov    %rbx,%rdi
  401163:	e8 b8 11 00 00       	callq  402320 <Seq_remlo>
  401168:	44 8b 30             	mov    (%rax),%r14d
  40116b:	48 89 c7             	mov    %rax,%rdi
  40116e:	e8 dd f8 ff ff       	callq  400a50 <free@plt>
  401173:	4c 89 e2             	mov    %r12,%rdx
  401176:	48 89 ef             	mov    %rbp,%rdi
  401179:	44 89 f6             	mov    %r14d,%esi
  40117c:	e8 8f 10 00 00       	callq  402210 <Seq_put>
  401181:	eb c6                	jmp    401149 <memory_map+0x69>
  401183:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40118a:	00 00 00 00 
  40118e:	66 90                	xchg   %ax,%ax

0000000000401190 <memory_new>:
  401190:	41 56                	push   %r14
  401192:	41 89 fe             	mov    %edi,%r14d
  401195:	bf 10 00 00 00       	mov    $0x10,%edi
  40119a:	41 55                	push   %r13
  40119c:	41 54                	push   %r12
  40119e:	55                   	push   %rbp
  40119f:	53                   	push   %rbx
  4011a0:	31 db                	xor    %ebx,%ebx
  4011a2:	e8 49 f9 ff ff       	callq  400af0 <malloc@plt>
  4011a7:	bf 0a 00 00 00       	mov    $0xa,%edi
  4011ac:	49 89 c5             	mov    %rax,%r13
  4011af:	e8 ac 0e 00 00       	callq  402060 <Seq_new>
  4011b4:	bf 0a 00 00 00       	mov    $0xa,%edi
  4011b9:	49 89 c4             	mov    %rax,%r12
  4011bc:	e8 9f 0e 00 00       	callq  402060 <Seq_new>
  4011c1:	48 89 c5             	mov    %rax,%rbp
  4011c4:	0f 1f 40 00          	nopl   0x0(%rax)
  4011c8:	31 f6                	xor    %esi,%esi
  4011ca:	4c 89 e7             	mov    %r12,%rdi
  4011cd:	e8 0e 13 00 00       	callq  4024e0 <Seq_addlo>
  4011d2:	bf 04 00 00 00       	mov    $0x4,%edi
  4011d7:	e8 14 f9 ff ff       	callq  400af0 <malloc@plt>
  4011dc:	48 89 ef             	mov    %rbp,%rdi
  4011df:	89 18                	mov    %ebx,(%rax)
  4011e1:	48 89 c6             	mov    %rax,%rsi
  4011e4:	83 c3 01             	add    $0x1,%ebx
  4011e7:	e8 c4 11 00 00       	callq  4023b0 <Seq_addhi>
  4011ec:	83 fb 0a             	cmp    $0xa,%ebx
  4011ef:	75 d7                	jne    4011c8 <memory_new+0x38>
  4011f1:	44 89 f6             	mov    %r14d,%esi
  4011f4:	4c 89 ef             	mov    %r13,%rdi
  4011f7:	4d 89 65 00          	mov    %r12,0x0(%r13)
  4011fb:	49 89 6d 08          	mov    %rbp,0x8(%r13)
  4011ff:	e8 dc fe ff ff       	callq  4010e0 <memory_map>
  401204:	5b                   	pop    %rbx
  401205:	4c 89 e8             	mov    %r13,%rax
  401208:	5d                   	pop    %rbp
  401209:	41 5c                	pop    %r12
  40120b:	41 5d                	pop    %r13
  40120d:	41 5e                	pop    %r14
  40120f:	c3                   	retq   

0000000000401210 <memory_unmap>:
  401210:	55                   	push   %rbp
  401211:	89 f5                	mov    %esi,%ebp
  401213:	53                   	push   %rbx
  401214:	48 89 fb             	mov    %rdi,%rbx
  401217:	48 83 ec 18          	sub    $0x18,%rsp
  40121b:	85 f6                	test   %esi,%esi
  40121d:	74 51                	je     401270 <memory_unmap+0x60>
  40121f:	48 8b 3b             	mov    (%rbx),%rdi
  401222:	89 ee                	mov    %ebp,%esi
  401224:	e8 67 0f 00 00       	callq  402190 <Seq_get>
  401229:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40122e:	48 85 c0             	test   %rax,%rax
  401231:	74 5d                	je     401290 <memory_unmap+0x80>
  401233:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  401238:	e8 b3 14 00 00       	callq  4026f0 <UArray_free>
  40123d:	bf 04 00 00 00       	mov    $0x4,%edi
  401242:	e8 a9 f8 ff ff       	callq  400af0 <malloc@plt>
  401247:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  40124b:	89 28                	mov    %ebp,(%rax)
  40124d:	48 89 c6             	mov    %rax,%rsi
  401250:	e8 5b 11 00 00       	callq  4023b0 <Seq_addhi>
  401255:	48 8b 3b             	mov    (%rbx),%rdi
  401258:	89 ee                	mov    %ebp,%esi
  40125a:	31 d2                	xor    %edx,%edx
  40125c:	e8 af 0f 00 00       	callq  402210 <Seq_put>
  401261:	48 83 c4 18          	add    $0x18,%rsp
  401265:	5b                   	pop    %rbx
  401266:	5d                   	pop    %rbp
  401267:	c3                   	retq   
  401268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40126f:	00 
  401270:	ba ab 01 00 00       	mov    $0x1ab,%edx
  401275:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40127a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40127f:	e8 3c 0c 00 00       	callq  401ec0 <Except_raise>
  401284:	eb 99                	jmp    40121f <memory_unmap+0xf>
  401286:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40128d:	00 00 00 
  401290:	ba ae 01 00 00       	mov    $0x1ae,%edx
  401295:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40129a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40129f:	e8 1c 0c 00 00       	callq  401ec0 <Except_raise>
  4012a4:	eb 8d                	jmp    401233 <memory_unmap+0x23>
  4012a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4012ad:	00 00 00 

00000000004012b0 <instruction_call>:
  4012b0:	41 57                	push   %r15
  4012b2:	41 89 cf             	mov    %ecx,%r15d
  4012b5:	41 56                	push   %r14
  4012b7:	45 09 c7             	or     %r8d,%r15d
  4012ba:	41 89 ce             	mov    %ecx,%r14d
  4012bd:	41 55                	push   %r13
  4012bf:	41 09 d7             	or     %edx,%r15d
  4012c2:	41 89 d5             	mov    %edx,%r13d
  4012c5:	41 54                	push   %r12
  4012c7:	49 89 fc             	mov    %rdi,%r12
  4012ca:	55                   	push   %rbp
  4012cb:	44 89 c5             	mov    %r8d,%ebp
  4012ce:	53                   	push   %rbx
  4012cf:	89 f3                	mov    %esi,%ebx
  4012d1:	48 83 ec 18          	sub    $0x18,%rsp
  4012d5:	41 83 ff 07          	cmp    $0x7,%r15d
  4012d9:	0f 86 99 00 00 00    	jbe    401378 <instruction_call+0xc8>
  4012df:	ba b8 00 00 00       	mov    $0xb8,%edx
  4012e4:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4012e9:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4012ee:	e8 cd 0b 00 00       	callq  401ec0 <Except_raise>
  4012f3:	83 fb 0b             	cmp    $0xb,%ebx
  4012f6:	77 6e                	ja     401366 <instruction_call+0xb6>
  4012f8:	ff 24 dd 60 2d 40 00 	jmpq   *0x402d60(,%rbx,8)
  4012ff:	90                   	nop
  401300:	49 8b 1c 24          	mov    (%r12),%rbx
  401304:	41 83 fe 07          	cmp    $0x7,%r14d
  401308:	0f 87 72 05 00 00    	ja     401880 <instruction_call+0x5d0>
  40130e:	48 8b 3b             	mov    (%rbx),%rdi
  401311:	44 89 f6             	mov    %r14d,%esi
  401314:	e8 47 14 00 00       	callq  402760 <UArray_at>
  401319:	49 8b 1c 24          	mov    (%r12),%rbx
  40131d:	44 8b 30             	mov    (%rax),%r14d
  401320:	83 fd 07             	cmp    $0x7,%ebp
  401323:	0f 87 f7 06 00 00    	ja     401a20 <instruction_call+0x770>
  401329:	48 8b 3b             	mov    (%rbx),%rdi
  40132c:	89 ee                	mov    %ebp,%esi
  40132e:	e8 2d 14 00 00       	callq  402760 <UArray_at>
  401333:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  401338:	44 89 f6             	mov    %r14d,%esi
  40133b:	8b 10                	mov    (%rax),%edx
  40133d:	e8 ee fc ff ff       	callq  401030 <memory_get>
  401342:	49 8b 2c 24          	mov    (%r12),%rbp
  401346:	89 c3                	mov    %eax,%ebx
  401348:	41 83 fd 07          	cmp    $0x7,%r13d
  40134c:	0f 87 36 01 00 00    	ja     401488 <instruction_call+0x1d8>
  401352:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401358:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  40135c:	44 89 ee             	mov    %r13d,%esi
  40135f:	e8 fc 13 00 00       	callq  402760 <UArray_at>
  401364:	89 18                	mov    %ebx,(%rax)
  401366:	48 83 c4 18          	add    $0x18,%rsp
  40136a:	5b                   	pop    %rbx
  40136b:	5d                   	pop    %rbp
  40136c:	41 5c                	pop    %r12
  40136e:	41 5d                	pop    %r13
  401370:	41 5e                	pop    %r14
  401372:	41 5f                	pop    %r15
  401374:	c3                   	retq   
  401375:	0f 1f 00             	nopl   (%rax)
  401378:	83 fb 0b             	cmp    $0xb,%ebx
  40137b:	77 e9                	ja     401366 <instruction_call+0xb6>
  40137d:	ff 24 dd c0 2d 40 00 	jmpq   *0x402dc0(,%rbx,8)
  401384:	0f 1f 40 00          	nopl   0x0(%rax)
  401388:	41 83 ff 07          	cmp    $0x7,%r15d
  40138c:	0f 86 ae 04 00 00    	jbe    401840 <instruction_call+0x590>
  401392:	ba 21 01 00 00       	mov    $0x121,%edx
  401397:	be 41 2d 40 00       	mov    $0x402d41,%esi
  40139c:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4013a1:	e8 1a 0b 00 00       	callq  401ec0 <Except_raise>
  4013a6:	49 8b 1c 24          	mov    (%r12),%rbx
  4013aa:	83 fd 07             	cmp    $0x7,%ebp
  4013ad:	0f 87 15 04 00 00    	ja     4017c8 <instruction_call+0x518>
  4013b3:	48 8b 3b             	mov    (%rbx),%rdi
  4013b6:	89 ee                	mov    %ebp,%esi
  4013b8:	e8 a3 13 00 00       	callq  402760 <UArray_at>
  4013bd:	48 8b 35 fc 2c 20 00 	mov    0x202cfc(%rip),%rsi        # 6040c0 <stdout@@GLIBC_2.2.5>
  4013c4:	8b 38                	mov    (%rax),%edi
  4013c6:	48 83 c4 18          	add    $0x18,%rsp
  4013ca:	5b                   	pop    %rbx
  4013cb:	5d                   	pop    %rbp
  4013cc:	41 5c                	pop    %r12
  4013ce:	41 5d                	pop    %r13
  4013d0:	41 5e                	pop    %r14
  4013d2:	41 5f                	pop    %r15
  4013d4:	e9 c7 f6 ff ff       	jmpq   400aa0 <putc@plt>
  4013d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4013e0:	41 83 ff 07          	cmp    $0x7,%r15d
  4013e4:	0f 86 36 04 00 00    	jbe    401820 <instruction_call+0x570>
  4013ea:	ba 36 01 00 00       	mov    $0x136,%edx
  4013ef:	be 41 2d 40 00       	mov    $0x402d41,%esi
  4013f4:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4013f9:	e8 c2 0a 00 00       	callq  401ec0 <Except_raise>
  4013fe:	48 8b 3d cb 2c 20 00 	mov    0x202ccb(%rip),%rdi        # 6040d0 <stdin@@GLIBC_2.2.5>
  401405:	e8 76 f6 ff ff       	callq  400a80 <fgetc@plt>
  40140a:	89 c3                	mov    %eax,%ebx
  40140c:	83 f8 ff             	cmp    $0xffffffff,%eax
  40140f:	0f 84 d3 03 00 00    	je     4017e8 <instruction_call+0x538>
  401415:	4d 8b 24 24          	mov    (%r12),%r12
  401419:	83 fd 07             	cmp    $0x7,%ebp
  40141c:	0f 87 86 03 00 00    	ja     4017a8 <instruction_call+0x4f8>
  401422:	49 8b 3c 24          	mov    (%r12),%rdi
  401426:	89 ee                	mov    %ebp,%esi
  401428:	e8 33 13 00 00       	callq  402760 <UArray_at>
  40142d:	89 18                	mov    %ebx,(%rax)
  40142f:	e9 32 ff ff ff       	jmpq   401366 <instruction_call+0xb6>
  401434:	0f 1f 40 00          	nopl   0x0(%rax)
  401438:	49 8b 1c 24          	mov    (%r12),%rbx
  40143c:	41 83 fe 07          	cmp    $0x7,%r14d
  401440:	0f 87 ba 05 00 00    	ja     401a00 <instruction_call+0x750>
  401446:	48 8b 3b             	mov    (%rbx),%rdi
  401449:	44 89 f6             	mov    %r14d,%esi
  40144c:	e8 0f 13 00 00       	callq  402760 <UArray_at>
  401451:	4d 8b 34 24          	mov    (%r12),%r14
  401455:	8b 18                	mov    (%rax),%ebx
  401457:	83 fd 07             	cmp    $0x7,%ebp
  40145a:	0f 87 80 05 00 00    	ja     4019e0 <instruction_call+0x730>
  401460:	49 8b 3e             	mov    (%r14),%rdi
  401463:	89 ee                	mov    %ebp,%esi
  401465:	e8 f6 12 00 00       	callq  402760 <UArray_at>
  40146a:	31 d2                	xor    %edx,%edx
  40146c:	49 8b 2c 24          	mov    (%r12),%rbp
  401470:	49 89 c0             	mov    %rax,%r8
  401473:	89 d8                	mov    %ebx,%eax
  401475:	41 f7 30             	divl   (%r8)
  401478:	89 c3                	mov    %eax,%ebx
  40147a:	41 83 fd 07          	cmp    $0x7,%r13d
  40147e:	0f 86 d4 fe ff ff    	jbe    401358 <instruction_call+0xa8>
  401484:	0f 1f 40 00          	nopl   0x0(%rax)
  401488:	ba f1 01 00 00       	mov    $0x1f1,%edx
  40148d:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401492:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401497:	e8 24 0a 00 00       	callq  401ec0 <Except_raise>
  40149c:	e9 b7 fe ff ff       	jmpq   401358 <instruction_call+0xa8>
  4014a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4014a8:	49 8b 1c 24          	mov    (%r12),%rbx
  4014ac:	41 83 fe 07          	cmp    $0x7,%r14d
  4014b0:	0f 87 0a 05 00 00    	ja     4019c0 <instruction_call+0x710>
  4014b6:	48 8b 3b             	mov    (%rbx),%rdi
  4014b9:	44 89 f6             	mov    %r14d,%esi
  4014bc:	e8 9f 12 00 00       	callq  402760 <UArray_at>
  4014c1:	4d 8b 34 24          	mov    (%r12),%r14
  4014c5:	8b 18                	mov    (%rax),%ebx
  4014c7:	83 fd 07             	cmp    $0x7,%ebp
  4014ca:	0f 87 d0 04 00 00    	ja     4019a0 <instruction_call+0x6f0>
  4014d0:	49 8b 3e             	mov    (%r14),%rdi
  4014d3:	89 ee                	mov    %ebp,%esi
  4014d5:	e8 86 12 00 00       	callq  402760 <UArray_at>
  4014da:	49 8b 2c 24          	mov    (%r12),%rbp
  4014de:	03 18                	add    (%rax),%ebx
  4014e0:	41 83 fd 07          	cmp    $0x7,%r13d
  4014e4:	0f 86 6e fe ff ff    	jbe    401358 <instruction_call+0xa8>
  4014ea:	eb 9c                	jmp    401488 <instruction_call+0x1d8>
  4014ec:	0f 1f 40 00          	nopl   0x0(%rax)
  4014f0:	49 8b 1c 24          	mov    (%r12),%rbx
  4014f4:	41 83 fe 07          	cmp    $0x7,%r14d
  4014f8:	0f 87 82 04 00 00    	ja     401980 <instruction_call+0x6d0>
  4014fe:	48 8b 3b             	mov    (%rbx),%rdi
  401501:	44 89 f6             	mov    %r14d,%esi
  401504:	e8 57 12 00 00       	callq  402760 <UArray_at>
  401509:	4d 8b 34 24          	mov    (%r12),%r14
  40150d:	8b 18                	mov    (%rax),%ebx
  40150f:	83 fd 07             	cmp    $0x7,%ebp
  401512:	0f 87 48 04 00 00    	ja     401960 <instruction_call+0x6b0>
  401518:	49 8b 3e             	mov    (%r14),%rdi
  40151b:	89 ee                	mov    %ebp,%esi
  40151d:	e8 3e 12 00 00       	callq  402760 <UArray_at>
  401522:	49 8b 2c 24          	mov    (%r12),%rbp
  401526:	0f af 18             	imul   (%rax),%ebx
  401529:	41 83 fd 07          	cmp    $0x7,%r13d
  40152d:	0f 86 25 fe ff ff    	jbe    401358 <instruction_call+0xa8>
  401533:	e9 50 ff ff ff       	jmpq   401488 <instruction_call+0x1d8>
  401538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40153f:	00 
  401540:	49 8b 1c 24          	mov    (%r12),%rbx
  401544:	41 83 fd 07          	cmp    $0x7,%r13d
  401548:	0f 87 f2 03 00 00    	ja     401940 <instruction_call+0x690>
  40154e:	48 8b 3b             	mov    (%rbx),%rdi
  401551:	44 89 ee             	mov    %r13d,%esi
  401554:	e8 07 12 00 00       	callq  402760 <UArray_at>
  401559:	49 8b 1c 24          	mov    (%r12),%rbx
  40155d:	44 8b 38             	mov    (%rax),%r15d
  401560:	41 83 fe 07          	cmp    $0x7,%r14d
  401564:	0f 87 b6 03 00 00    	ja     401920 <instruction_call+0x670>
  40156a:	48 8b 3b             	mov    (%rbx),%rdi
  40156d:	44 89 f6             	mov    %r14d,%esi
  401570:	e8 eb 11 00 00       	callq  402760 <UArray_at>
  401575:	49 8b 1c 24          	mov    (%r12),%rbx
  401579:	44 8b 28             	mov    (%rax),%r13d
  40157c:	83 fd 07             	cmp    $0x7,%ebp
  40157f:	0f 87 7b 03 00 00    	ja     401900 <instruction_call+0x650>
  401585:	48 8b 3b             	mov    (%rbx),%rdi
  401588:	89 ee                	mov    %ebp,%esi
  40158a:	e8 d1 11 00 00       	callq  402760 <UArray_at>
  40158f:	44 89 fe             	mov    %r15d,%esi
  401592:	8b 18                	mov    (%rax),%ebx
  401594:	49 8b 44 24 08       	mov    0x8(%r12),%rax
  401599:	48 8b 38             	mov    (%rax),%rdi
  40159c:	e8 ef 0b 00 00       	callq  402190 <Seq_get>
  4015a1:	48 89 c5             	mov    %rax,%rbp
  4015a4:	48 85 c0             	test   %rax,%rax
  4015a7:	0f 84 93 04 00 00    	je     401a40 <instruction_call+0x790>
  4015ad:	44 89 ee             	mov    %r13d,%esi
  4015b0:	48 89 ef             	mov    %rbp,%rdi
  4015b3:	e8 a8 11 00 00       	callq  402760 <UArray_at>
  4015b8:	89 18                	mov    %ebx,(%rax)
  4015ba:	e9 a7 fd ff ff       	jmpq   401366 <instruction_call+0xb6>
  4015bf:	90                   	nop
  4015c0:	49 8b 1c 24          	mov    (%r12),%rbx
  4015c4:	83 fd 07             	cmp    $0x7,%ebp
  4015c7:	0f 87 13 03 00 00    	ja     4018e0 <instruction_call+0x630>
  4015cd:	48 8b 3b             	mov    (%rbx),%rdi
  4015d0:	89 ee                	mov    %ebp,%esi
  4015d2:	e8 89 11 00 00       	callq  402760 <UArray_at>
  4015d7:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  4015dc:	8b 30                	mov    (%rax),%esi
  4015de:	e8 fd fa ff ff       	callq  4010e0 <memory_map>
  4015e3:	49 8b 2c 24          	mov    (%r12),%rbp
  4015e7:	89 c3                	mov    %eax,%ebx
  4015e9:	41 83 fe 07          	cmp    $0x7,%r14d
  4015ed:	0f 87 6d 02 00 00    	ja     401860 <instruction_call+0x5b0>
  4015f3:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  4015f7:	44 89 f6             	mov    %r14d,%esi
  4015fa:	e8 61 11 00 00       	callq  402760 <UArray_at>
  4015ff:	89 18                	mov    %ebx,(%rax)
  401601:	e9 60 fd ff ff       	jmpq   401366 <instruction_call+0xb6>
  401606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40160d:	00 00 00 
  401610:	41 83 ff 07          	cmp    $0x7,%r15d
  401614:	0f 86 36 02 00 00    	jbe    401850 <instruction_call+0x5a0>
  40161a:	ba 0f 01 00 00       	mov    $0x10f,%edx
  40161f:	be 41 2d 40 00       	mov    $0x402d41,%esi
  401624:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401629:	e8 92 08 00 00       	callq  401ec0 <Except_raise>
  40162e:	49 8b 1c 24          	mov    (%r12),%rbx
  401632:	83 fd 07             	cmp    $0x7,%ebp
  401635:	0f 87 2d 01 00 00    	ja     401768 <instruction_call+0x4b8>
  40163b:	48 8b 3b             	mov    (%rbx),%rdi
  40163e:	89 ee                	mov    %ebp,%esi
  401640:	e8 1b 11 00 00       	callq  402760 <UArray_at>
  401645:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  40164a:	8b 30                	mov    (%rax),%esi
  40164c:	48 83 c4 18          	add    $0x18,%rsp
  401650:	5b                   	pop    %rbx
  401651:	5d                   	pop    %rbp
  401652:	41 5c                	pop    %r12
  401654:	41 5d                	pop    %r13
  401656:	41 5e                	pop    %r14
  401658:	41 5f                	pop    %r15
  40165a:	e9 b1 fb ff ff       	jmpq   401210 <memory_unmap>
  40165f:	90                   	nop
  401660:	49 8b 1c 24          	mov    (%r12),%rbx
  401664:	41 83 fe 07          	cmp    $0x7,%r14d
  401668:	0f 87 52 02 00 00    	ja     4018c0 <instruction_call+0x610>
  40166e:	48 8b 3b             	mov    (%rbx),%rdi
  401671:	44 89 f6             	mov    %r14d,%esi
  401674:	e8 e7 10 00 00       	callq  402760 <UArray_at>
  401679:	4d 8b 34 24          	mov    (%r12),%r14
  40167d:	8b 18                	mov    (%rax),%ebx
  40167f:	83 fd 07             	cmp    $0x7,%ebp
  401682:	0f 87 18 02 00 00    	ja     4018a0 <instruction_call+0x5f0>
  401688:	49 8b 3e             	mov    (%r14),%rdi
  40168b:	89 ee                	mov    %ebp,%esi
  40168d:	e8 ce 10 00 00       	callq  402760 <UArray_at>
  401692:	49 8b 2c 24          	mov    (%r12),%rbp
  401696:	23 18                	and    (%rax),%ebx
  401698:	f7 d3                	not    %ebx
  40169a:	41 83 fd 07          	cmp    $0x7,%r13d
  40169e:	0f 86 b4 fc ff ff    	jbe    401358 <instruction_call+0xa8>
  4016a4:	e9 df fd ff ff       	jmpq   401488 <instruction_call+0x1d8>
  4016a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4016b0:	49 8b 1c 24          	mov    (%r12),%rbx
  4016b4:	83 fd 07             	cmp    $0x7,%ebp
  4016b7:	0f 87 cb 00 00 00    	ja     401788 <instruction_call+0x4d8>
  4016bd:	48 8b 3b             	mov    (%rbx),%rdi
  4016c0:	89 ee                	mov    %ebp,%esi
  4016c2:	e8 99 10 00 00       	callq  402760 <UArray_at>
  4016c7:	8b 10                	mov    (%rax),%edx
  4016c9:	85 d2                	test   %edx,%edx
  4016cb:	0f 84 95 fc ff ff    	je     401366 <instruction_call+0xb6>
  4016d1:	49 8b 1c 24          	mov    (%r12),%rbx
  4016d5:	41 83 fe 07          	cmp    $0x7,%r14d
  4016d9:	76 69                	jbe    401744 <instruction_call+0x494>
  4016db:	ba 00 02 00 00       	mov    $0x200,%edx
  4016e0:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4016e5:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4016ea:	e8 d1 07 00 00       	callq  401ec0 <Except_raise>
  4016ef:	eb 53                	jmp    401744 <instruction_call+0x494>
  4016f1:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
  4016f6:	41 83 ff 07          	cmp    $0x7,%r15d
  4016fa:	76 14                	jbe    401710 <instruction_call+0x460>
  4016fc:	ba eb 00 00 00       	mov    $0xeb,%edx
  401701:	be 41 2d 40 00       	mov    $0x402d41,%esi
  401706:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40170b:	e8 b0 07 00 00       	callq  401ec0 <Except_raise>
  401710:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  401715:	e8 86 f8 ff ff       	callq  400fa0 <um_free>
  40171a:	31 ff                	xor    %edi,%edi
  40171c:	e8 1f f4 ff ff       	callq  400b40 <exit@plt>
  401721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401728:	49 8b 04 24          	mov    (%r12),%rax
  40172c:	89 ee                	mov    %ebp,%esi
  40172e:	48 8b 38             	mov    (%rax),%rdi
  401731:	e8 2a 10 00 00       	callq  402760 <UArray_at>
  401736:	8b 00                	mov    (%rax),%eax
  401738:	85 c0                	test   %eax,%eax
  40173a:	0f 84 26 fc ff ff    	je     401366 <instruction_call+0xb6>
  401740:	49 8b 1c 24          	mov    (%r12),%rbx
  401744:	48 8b 3b             	mov    (%rbx),%rdi
  401747:	44 89 f6             	mov    %r14d,%esi
  40174a:	e8 11 10 00 00       	callq  402760 <UArray_at>
  40174f:	49 8b 2c 24          	mov    (%r12),%rbp
  401753:	8b 18                	mov    (%rax),%ebx
  401755:	41 83 fd 07          	cmp    $0x7,%r13d
  401759:	0f 86 f9 fb ff ff    	jbe    401358 <instruction_call+0xa8>
  40175f:	e9 24 fd ff ff       	jmpq   401488 <instruction_call+0x1d8>
  401764:	0f 1f 40 00          	nopl   0x0(%rax)
  401768:	ba 00 02 00 00       	mov    $0x200,%edx
  40176d:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401772:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401777:	e8 44 07 00 00       	callq  401ec0 <Except_raise>
  40177c:	e9 ba fe ff ff       	jmpq   40163b <instruction_call+0x38b>
  401781:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401788:	ba 00 02 00 00       	mov    $0x200,%edx
  40178d:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401792:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401797:	e8 24 07 00 00       	callq  401ec0 <Except_raise>
  40179c:	e9 1c ff ff ff       	jmpq   4016bd <instruction_call+0x40d>
  4017a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4017a8:	ba f1 01 00 00       	mov    $0x1f1,%edx
  4017ad:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4017b2:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4017b7:	e8 04 07 00 00       	callq  401ec0 <Except_raise>
  4017bc:	e9 61 fc ff ff       	jmpq   401422 <instruction_call+0x172>
  4017c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4017c8:	ba 00 02 00 00       	mov    $0x200,%edx
  4017cd:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4017d2:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4017d7:	e8 e4 06 00 00       	callq  401ec0 <Except_raise>
  4017dc:	e9 d2 fb ff ff       	jmpq   4013b3 <instruction_call+0x103>
  4017e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4017e8:	49 8b 1c 24          	mov    (%r12),%rbx
  4017ec:	83 fd 07             	cmp    $0x7,%ebp
  4017ef:	76 14                	jbe    401805 <instruction_call+0x555>
  4017f1:	ba f1 01 00 00       	mov    $0x1f1,%edx
  4017f6:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4017fb:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401800:	e8 bb 06 00 00       	callq  401ec0 <Except_raise>
  401805:	48 8b 3b             	mov    (%rbx),%rdi
  401808:	89 ee                	mov    %ebp,%esi
  40180a:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
  40180f:	e8 4c 0f 00 00       	callq  402760 <UArray_at>
  401814:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
  40181a:	e9 f6 fb ff ff       	jmpq   401415 <instruction_call+0x165>
  40181f:	90                   	nop
  401820:	48 8b 3d a9 28 20 00 	mov    0x2028a9(%rip),%rdi        # 6040d0 <stdin@@GLIBC_2.2.5>
  401827:	e8 54 f2 ff ff       	callq  400a80 <fgetc@plt>
  40182c:	89 c3                	mov    %eax,%ebx
  40182e:	83 f8 ff             	cmp    $0xffffffff,%eax
  401831:	0f 84 22 02 00 00    	je     401a59 <instruction_call+0x7a9>
  401837:	4d 8b 24 24          	mov    (%r12),%r12
  40183b:	e9 e2 fb ff ff       	jmpq   401422 <instruction_call+0x172>
  401840:	49 8b 1c 24          	mov    (%r12),%rbx
  401844:	e9 6a fb ff ff       	jmpq   4013b3 <instruction_call+0x103>
  401849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401850:	49 8b 1c 24          	mov    (%r12),%rbx
  401854:	e9 e2 fd ff ff       	jmpq   40163b <instruction_call+0x38b>
  401859:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401860:	ba f1 01 00 00       	mov    $0x1f1,%edx
  401865:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40186a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40186f:	e8 4c 06 00 00       	callq  401ec0 <Except_raise>
  401874:	e9 7a fd ff ff       	jmpq   4015f3 <instruction_call+0x343>
  401879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401880:	ba 00 02 00 00       	mov    $0x200,%edx
  401885:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40188a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40188f:	e8 2c 06 00 00       	callq  401ec0 <Except_raise>
  401894:	e9 75 fa ff ff       	jmpq   40130e <instruction_call+0x5e>
  401899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4018a0:	ba 00 02 00 00       	mov    $0x200,%edx
  4018a5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4018aa:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4018af:	e8 0c 06 00 00       	callq  401ec0 <Except_raise>
  4018b4:	e9 cf fd ff ff       	jmpq   401688 <instruction_call+0x3d8>
  4018b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4018c0:	ba 00 02 00 00       	mov    $0x200,%edx
  4018c5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4018ca:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4018cf:	e8 ec 05 00 00       	callq  401ec0 <Except_raise>
  4018d4:	e9 95 fd ff ff       	jmpq   40166e <instruction_call+0x3be>
  4018d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4018e0:	ba 00 02 00 00       	mov    $0x200,%edx
  4018e5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4018ea:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4018ef:	e8 cc 05 00 00       	callq  401ec0 <Except_raise>
  4018f4:	e9 d4 fc ff ff       	jmpq   4015cd <instruction_call+0x31d>
  4018f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401900:	ba 00 02 00 00       	mov    $0x200,%edx
  401905:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40190a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40190f:	e8 ac 05 00 00       	callq  401ec0 <Except_raise>
  401914:	e9 6c fc ff ff       	jmpq   401585 <instruction_call+0x2d5>
  401919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401920:	ba 00 02 00 00       	mov    $0x200,%edx
  401925:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40192a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40192f:	e8 8c 05 00 00       	callq  401ec0 <Except_raise>
  401934:	e9 31 fc ff ff       	jmpq   40156a <instruction_call+0x2ba>
  401939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401940:	ba 00 02 00 00       	mov    $0x200,%edx
  401945:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40194a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40194f:	e8 6c 05 00 00       	callq  401ec0 <Except_raise>
  401954:	e9 f5 fb ff ff       	jmpq   40154e <instruction_call+0x29e>
  401959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401960:	ba 00 02 00 00       	mov    $0x200,%edx
  401965:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40196a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40196f:	e8 4c 05 00 00       	callq  401ec0 <Except_raise>
  401974:	e9 9f fb ff ff       	jmpq   401518 <instruction_call+0x268>
  401979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401980:	ba 00 02 00 00       	mov    $0x200,%edx
  401985:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  40198a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  40198f:	e8 2c 05 00 00       	callq  401ec0 <Except_raise>
  401994:	e9 65 fb ff ff       	jmpq   4014fe <instruction_call+0x24e>
  401999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4019a0:	ba 00 02 00 00       	mov    $0x200,%edx
  4019a5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4019aa:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4019af:	e8 0c 05 00 00       	callq  401ec0 <Except_raise>
  4019b4:	e9 17 fb ff ff       	jmpq   4014d0 <instruction_call+0x220>
  4019b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4019c0:	ba 00 02 00 00       	mov    $0x200,%edx
  4019c5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4019ca:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4019cf:	e8 ec 04 00 00       	callq  401ec0 <Except_raise>
  4019d4:	e9 dd fa ff ff       	jmpq   4014b6 <instruction_call+0x206>
  4019d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4019e0:	ba 00 02 00 00       	mov    $0x200,%edx
  4019e5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  4019ea:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  4019ef:	e8 cc 04 00 00       	callq  401ec0 <Except_raise>
  4019f4:	e9 67 fa ff ff       	jmpq   401460 <instruction_call+0x1b0>
  4019f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401a00:	ba 00 02 00 00       	mov    $0x200,%edx
  401a05:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401a0a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401a0f:	e8 ac 04 00 00       	callq  401ec0 <Except_raise>
  401a14:	e9 2d fa ff ff       	jmpq   401446 <instruction_call+0x196>
  401a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401a20:	ba 00 02 00 00       	mov    $0x200,%edx
  401a25:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401a2a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401a2f:	e8 8c 04 00 00       	callq  401ec0 <Except_raise>
  401a34:	e9 f0 f8 ff ff       	jmpq   401329 <instruction_call+0x79>
  401a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401a40:	ba 5a 01 00 00       	mov    $0x15a,%edx
  401a45:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401a4a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401a4f:	e8 6c 04 00 00       	callq  401ec0 <Except_raise>
  401a54:	e9 54 fb ff ff       	jmpq   4015ad <instruction_call+0x2fd>
  401a59:	49 8b 1c 24          	mov    (%r12),%rbx
  401a5d:	e9 a3 fd ff ff       	jmpq   401805 <instruction_call+0x555>
  401a62:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401a69:	00 00 00 00 
  401a6d:	0f 1f 00             	nopl   (%rax)

0000000000401a70 <um_execute>:
  401a70:	41 56                	push   %r14
  401a72:	31 f6                	xor    %esi,%esi
  401a74:	41 55                	push   %r13
  401a76:	49 89 fd             	mov    %rdi,%r13
  401a79:	41 54                	push   %r12
  401a7b:	55                   	push   %rbp
  401a7c:	53                   	push   %rbx
  401a7d:	48 83 ec 10          	sub    $0x10,%rsp
  401a81:	48 8b 47 08          	mov    0x8(%rdi),%rax
  401a85:	48 8b 38             	mov    (%rax),%rdi
  401a88:	e8 03 07 00 00       	callq  402190 <Seq_get>
  401a8d:	48 89 c5             	mov    %rax,%rbp
  401a90:	48 85 c0             	test   %rax,%rax
  401a93:	0f 84 07 01 00 00    	je     401ba0 <um_execute+0x130>
  401a99:	48 89 ef             	mov    %rbp,%rdi
  401a9c:	e8 3f 0d 00 00       	callq  4027e0 <UArray_length>
  401aa1:	41 89 c4             	mov    %eax,%r12d
  401aa4:	85 c0                	test   %eax,%eax
  401aa6:	0f 8e 90 00 00 00    	jle    401b3c <um_execute+0xcc>
  401aac:	31 db                	xor    %ebx,%ebx
  401aae:	eb 14                	jmp    401ac4 <um_execute+0x54>
  401ab0:	89 f1                	mov    %esi,%ecx
  401ab2:	44 89 d2             	mov    %r10d,%edx
  401ab5:	89 c6                	mov    %eax,%esi
  401ab7:	4c 89 ef             	mov    %r13,%rdi
  401aba:	e8 f1 f7 ff ff       	callq  4012b0 <instruction_call>
  401abf:	44 39 e3             	cmp    %r12d,%ebx
  401ac2:	7d 78                	jge    401b3c <um_execute+0xcc>
  401ac4:	89 de                	mov    %ebx,%esi
  401ac6:	48 89 ef             	mov    %rbp,%rdi
  401ac9:	83 c3 01             	add    $0x1,%ebx
  401acc:	e8 8f 0c 00 00       	callq  402760 <UArray_at>
  401ad1:	8b 30                	mov    (%rax),%esi
  401ad3:	48 89 f0             	mov    %rsi,%rax
  401ad6:	49 89 f0             	mov    %rsi,%r8
  401ad9:	48 c1 e0 20          	shl    $0x20,%rax
  401add:	48 c1 e8 3c          	shr    $0x3c,%rax
  401ae1:	48 83 f8 0d          	cmp    $0xd,%rax
  401ae5:	74 69                	je     401b50 <um_execute+0xe0>
  401ae7:	49 89 f2             	mov    %rsi,%r10
  401aea:	48 c1 e6 3a          	shl    $0x3a,%rsi
  401aee:	41 83 e0 07          	and    $0x7,%r8d
  401af2:	49 c1 e2 37          	shl    $0x37,%r10
  401af6:	48 c1 ee 3d          	shr    $0x3d,%rsi
  401afa:	49 c1 ea 3d          	shr    $0x3d,%r10
  401afe:	48 83 f8 0c          	cmp    $0xc,%rax
  401b02:	75 ac                	jne    401ab0 <um_execute+0x40>
  401b04:	89 f2                	mov    %esi,%edx
  401b06:	44 89 c1             	mov    %r8d,%ecx
  401b09:	44 89 d6             	mov    %r10d,%esi
  401b0c:	4c 89 ef             	mov    %r13,%rdi
  401b0f:	e8 2c f2 ff ff       	callq  400d40 <load_program>
  401b14:	31 f6                	xor    %esi,%esi
  401b16:	89 c3                	mov    %eax,%ebx
  401b18:	49 8b 45 08          	mov    0x8(%r13),%rax
  401b1c:	48 8b 38             	mov    (%rax),%rdi
  401b1f:	e8 6c 06 00 00       	callq  402190 <Seq_get>
  401b24:	48 89 c5             	mov    %rax,%rbp
  401b27:	48 85 c0             	test   %rax,%rax
  401b2a:	74 54                	je     401b80 <um_execute+0x110>
  401b2c:	48 89 ef             	mov    %rbp,%rdi
  401b2f:	e8 ac 0c 00 00       	callq  4027e0 <UArray_length>
  401b34:	41 89 c4             	mov    %eax,%r12d
  401b37:	44 39 e3             	cmp    %r12d,%ebx
  401b3a:	7c 88                	jl     401ac4 <um_execute+0x54>
  401b3c:	48 83 c4 10          	add    $0x10,%rsp
  401b40:	5b                   	pop    %rbx
  401b41:	5d                   	pop    %rbp
  401b42:	41 5c                	pop    %r12
  401b44:	41 5d                	pop    %r13
  401b46:	41 5e                	pop    %r14
  401b48:	c3                   	retq   
  401b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401b50:	49 8b 45 00          	mov    0x0(%r13),%rax
  401b54:	89 74 24 0c          	mov    %esi,0xc(%rsp)
  401b58:	48 c1 e6 24          	shl    $0x24,%rsi
  401b5c:	48 c1 ee 3d          	shr    $0x3d,%rsi
  401b60:	48 8b 38             	mov    (%rax),%rdi
  401b63:	e8 f8 0b 00 00       	callq  402760 <UArray_at>
  401b68:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  401b6d:	41 81 e6 ff ff ff 01 	and    $0x1ffffff,%r14d
  401b74:	44 89 30             	mov    %r14d,(%rax)
  401b77:	e9 43 ff ff ff       	jmpq   401abf <um_execute+0x4f>
  401b7c:	0f 1f 40 00          	nopl   0x0(%rax)
  401b80:	ba a1 00 00 00       	mov    $0xa1,%edx
  401b85:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401b8a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401b8f:	e8 2c 03 00 00       	callq  401ec0 <Except_raise>
  401b94:	eb 96                	jmp    401b2c <um_execute+0xbc>
  401b96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b9d:	00 00 00 
  401ba0:	ba 6f 00 00 00       	mov    $0x6f,%edx
  401ba5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401baa:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401baf:	e8 0c 03 00 00       	callq  401ec0 <Except_raise>
  401bb4:	e9 e0 fe ff ff       	jmpq   401a99 <um_execute+0x29>
  401bb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401bc0 <registers_new>:
  401bc0:	41 54                	push   %r12
  401bc2:	bf 08 00 00 00       	mov    $0x8,%edi
  401bc7:	55                   	push   %rbp
  401bc8:	53                   	push   %rbx
  401bc9:	31 db                	xor    %ebx,%ebx
  401bcb:	e8 20 ef ff ff       	callq  400af0 <malloc@plt>
  401bd0:	be 04 00 00 00       	mov    $0x4,%esi
  401bd5:	bf 08 00 00 00       	mov    $0x8,%edi
  401bda:	49 89 c4             	mov    %rax,%r12
  401bdd:	e8 7e 0a 00 00       	callq  402660 <UArray_new>
  401be2:	49 89 04 24          	mov    %rax,(%r12)
  401be6:	48 89 c5             	mov    %rax,%rbp
  401be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401bf0:	89 de                	mov    %ebx,%esi
  401bf2:	48 89 ef             	mov    %rbp,%rdi
  401bf5:	83 c3 01             	add    $0x1,%ebx
  401bf8:	e8 63 0b 00 00       	callq  402760 <UArray_at>
  401bfd:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  401c03:	83 fb 08             	cmp    $0x8,%ebx
  401c06:	75 e8                	jne    401bf0 <registers_new+0x30>
  401c08:	49 89 2c 24          	mov    %rbp,(%r12)
  401c0c:	4c 89 e0             	mov    %r12,%rax
  401c0f:	5b                   	pop    %rbx
  401c10:	5d                   	pop    %rbp
  401c11:	41 5c                	pop    %r12
  401c13:	c3                   	retq   
  401c14:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401c1b:	00 00 00 00 
  401c1f:	90                   	nop

0000000000401c20 <um_new>:
  401c20:	41 54                	push   %r12
  401c22:	55                   	push   %rbp
  401c23:	89 fd                	mov    %edi,%ebp
  401c25:	bf 10 00 00 00       	mov    $0x10,%edi
  401c2a:	48 83 ec 08          	sub    $0x8,%rsp
  401c2e:	e8 bd ee ff ff       	callq  400af0 <malloc@plt>
  401c33:	49 89 c4             	mov    %rax,%r12
  401c36:	48 85 c0             	test   %rax,%rax
  401c39:	74 22                	je     401c5d <um_new+0x3d>
  401c3b:	31 c0                	xor    %eax,%eax
  401c3d:	e8 7e ff ff ff       	callq  401bc0 <registers_new>
  401c42:	89 ef                	mov    %ebp,%edi
  401c44:	49 89 04 24          	mov    %rax,(%r12)
  401c48:	e8 43 f5 ff ff       	callq  401190 <memory_new>
  401c4d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
  401c52:	48 83 c4 08          	add    $0x8,%rsp
  401c56:	4c 89 e0             	mov    %r12,%rax
  401c59:	5d                   	pop    %rbp
  401c5a:	41 5c                	pop    %r12
  401c5c:	c3                   	retq   
  401c5d:	ba 49 00 00 00       	mov    $0x49,%edx
  401c62:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401c67:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401c6c:	e8 4f 02 00 00       	callq  401ec0 <Except_raise>
  401c71:	eb c8                	jmp    401c3b <um_new+0x1b>
  401c73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401c7a:	00 00 00 00 
  401c7e:	66 90                	xchg   %ax,%ax

0000000000401c80 <registers_free>:
  401c80:	53                   	push   %rbx
  401c81:	48 89 fb             	mov    %rdi,%rbx
  401c84:	48 8b 3f             	mov    (%rdi),%rdi
  401c87:	e8 64 0a 00 00       	callq  4026f0 <UArray_free>
  401c8c:	48 8b 3b             	mov    (%rbx),%rdi
  401c8f:	5b                   	pop    %rbx
  401c90:	e9 bb ed ff ff       	jmpq   400a50 <free@plt>
  401c95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401c9c:	00 00 00 00 

0000000000401ca0 <registers_put>:
  401ca0:	41 54                	push   %r12
  401ca2:	49 89 fc             	mov    %rdi,%r12
  401ca5:	55                   	push   %rbp
  401ca6:	89 f5                	mov    %esi,%ebp
  401ca8:	53                   	push   %rbx
  401ca9:	89 d3                	mov    %edx,%ebx
  401cab:	83 fe 07             	cmp    $0x7,%esi
  401cae:	77 18                	ja     401cc8 <registers_put+0x28>
  401cb0:	49 8b 3c 24          	mov    (%r12),%rdi
  401cb4:	89 ee                	mov    %ebp,%esi
  401cb6:	e8 a5 0a 00 00       	callq  402760 <UArray_at>
  401cbb:	89 18                	mov    %ebx,(%rax)
  401cbd:	5b                   	pop    %rbx
  401cbe:	5d                   	pop    %rbp
  401cbf:	41 5c                	pop    %r12
  401cc1:	c3                   	retq   
  401cc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401cc8:	ba f1 01 00 00       	mov    $0x1f1,%edx
  401ccd:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401cd2:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401cd7:	e8 e4 01 00 00       	callq  401ec0 <Except_raise>
  401cdc:	eb d2                	jmp    401cb0 <registers_put+0x10>
  401cde:	66 90                	xchg   %ax,%ax

0000000000401ce0 <registers_get>:
  401ce0:	55                   	push   %rbp
  401ce1:	89 f5                	mov    %esi,%ebp
  401ce3:	53                   	push   %rbx
  401ce4:	48 89 fb             	mov    %rdi,%rbx
  401ce7:	48 83 ec 08          	sub    $0x8,%rsp
  401ceb:	83 fe 07             	cmp    $0x7,%esi
  401cee:	77 18                	ja     401d08 <registers_get+0x28>
  401cf0:	48 8b 3b             	mov    (%rbx),%rdi
  401cf3:	89 ee                	mov    %ebp,%esi
  401cf5:	e8 66 0a 00 00       	callq  402760 <UArray_at>
  401cfa:	8b 00                	mov    (%rax),%eax
  401cfc:	48 83 c4 08          	add    $0x8,%rsp
  401d00:	5b                   	pop    %rbx
  401d01:	5d                   	pop    %rbp
  401d02:	c3                   	retq   
  401d03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401d08:	ba 00 02 00 00       	mov    $0x200,%edx
  401d0d:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401d12:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401d17:	e8 a4 01 00 00       	callq  401ec0 <Except_raise>
  401d1c:	eb d2                	jmp    401cf0 <registers_get+0x10>
  401d1e:	66 90                	xchg   %ax,%ax

0000000000401d20 <construct_word>:
  401d20:	41 56                	push   %r14
  401d22:	41 55                	push   %r13
  401d24:	41 54                	push   %r12
  401d26:	55                   	push   %rbp
  401d27:	53                   	push   %rbx
  401d28:	48 89 fb             	mov    %rdi,%rbx
  401d2b:	48 85 ff             	test   %rdi,%rdi
  401d2e:	0f 84 8c 00 00 00    	je     401dc0 <construct_word+0xa0>
  401d34:	41 be 20 00 00 00    	mov    $0x20,%r14d
  401d3a:	45 31 e4             	xor    %r12d,%r12d
  401d3d:	bd 48 00 00 00       	mov    $0x48,%ebp
  401d42:	48 89 df             	mov    %rbx,%rdi
  401d45:	e8 16 ee ff ff       	callq  400b60 <getc@plt>
  401d4a:	48 89 df             	mov    %rbx,%rdi
  401d4d:	41 89 c5             	mov    %eax,%r13d
  401d50:	e8 6b ed ff ff       	callq  400ac0 <feof@plt>
  401d55:	85 c0                	test   %eax,%eax
  401d57:	75 37                	jne    401d90 <construct_word+0x70>
  401d59:	44 89 e0             	mov    %r12d,%eax
  401d5c:	44 89 f1             	mov    %r14d,%ecx
  401d5f:	41 8d 56 f8          	lea    -0x8(%r14),%edx
  401d63:	89 ee                	mov    %ebp,%esi
  401d65:	49 89 c4             	mov    %rax,%r12
  401d68:	44 29 f6             	sub    %r14d,%esi
  401d6b:	49 d3 ec             	shr    %cl,%r12
  401d6e:	49 d3 e4             	shl    %cl,%r12
  401d71:	89 d1                	mov    %edx,%ecx
  401d73:	49 d3 e5             	shl    %cl,%r13
  401d76:	89 f1                	mov    %esi,%ecx
  401d78:	48 d3 e0             	shl    %cl,%rax
  401d7b:	45 09 ec             	or     %r13d,%r12d
  401d7e:	48 d3 e8             	shr    %cl,%rax
  401d81:	41 09 c4             	or     %eax,%r12d
  401d84:	85 d2                	test   %edx,%edx
  401d86:	74 28                	je     401db0 <construct_word+0x90>
  401d88:	41 89 d6             	mov    %edx,%r14d
  401d8b:	eb b5                	jmp    401d42 <construct_word+0x22>
  401d8d:	0f 1f 00             	nopl   (%rax)
  401d90:	ba 2a 02 00 00       	mov    $0x22a,%edx
  401d95:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401d9a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401d9f:	e8 1c 01 00 00       	callq  401ec0 <Except_raise>
  401da4:	eb b3                	jmp    401d59 <construct_word+0x39>
  401da6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401dad:	00 00 00 
  401db0:	5b                   	pop    %rbx
  401db1:	44 89 e0             	mov    %r12d,%eax
  401db4:	5d                   	pop    %rbp
  401db5:	41 5c                	pop    %r12
  401db7:	41 5d                	pop    %r13
  401db9:	41 5e                	pop    %r14
  401dbb:	c3                   	retq   
  401dbc:	0f 1f 40 00          	nopl   0x0(%rax)
  401dc0:	ba 22 02 00 00       	mov    $0x222,%edx
  401dc5:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401dca:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401dcf:	e8 ec 00 00 00       	callq  401ec0 <Except_raise>
  401dd4:	e9 5b ff ff ff       	jmpq   401d34 <construct_word+0x14>
  401dd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401de0 <populate_seg_zero>:
  401de0:	41 57                	push   %r15
  401de2:	49 89 ff             	mov    %rdi,%r15
  401de5:	41 56                	push   %r14
  401de7:	41 89 d6             	mov    %edx,%r14d
  401dea:	41 55                	push   %r13
  401dec:	49 89 f5             	mov    %rsi,%r13
  401def:	41 54                	push   %r12
  401df1:	55                   	push   %rbp
  401df2:	53                   	push   %rbx
  401df3:	48 83 ec 08          	sub    $0x8,%rsp
  401df7:	48 85 f6             	test   %rsi,%rsi
  401dfa:	74 74                	je     401e70 <populate_seg_zero+0x90>
  401dfc:	45 85 f6             	test   %r14d,%r14d
  401dff:	74 57                	je     401e58 <populate_seg_zero+0x78>
  401e01:	31 db                	xor    %ebx,%ebx
  401e03:	eb 18                	jmp    401e1d <populate_seg_zero+0x3d>
  401e05:	0f 1f 00             	nopl   (%rax)
  401e08:	89 de                	mov    %ebx,%esi
  401e0a:	48 89 ef             	mov    %rbp,%rdi
  401e0d:	83 c3 01             	add    $0x1,%ebx
  401e10:	e8 4b 09 00 00       	callq  402760 <UArray_at>
  401e15:	44 89 20             	mov    %r12d,(%rax)
  401e18:	41 39 de             	cmp    %ebx,%r14d
  401e1b:	74 3b                	je     401e58 <populate_seg_zero+0x78>
  401e1d:	4c 89 ef             	mov    %r13,%rdi
  401e20:	e8 fb fe ff ff       	callq  401d20 <construct_word>
  401e25:	31 f6                	xor    %esi,%esi
  401e27:	41 89 c4             	mov    %eax,%r12d
  401e2a:	49 8b 47 08          	mov    0x8(%r15),%rax
  401e2e:	48 8b 38             	mov    (%rax),%rdi
  401e31:	e8 5a 03 00 00       	callq  402190 <Seq_get>
  401e36:	48 89 c5             	mov    %rax,%rbp
  401e39:	48 85 c0             	test   %rax,%rax
  401e3c:	75 ca                	jne    401e08 <populate_seg_zero+0x28>
  401e3e:	ba 5a 01 00 00       	mov    $0x15a,%edx
  401e43:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401e48:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401e4d:	e8 6e 00 00 00       	callq  401ec0 <Except_raise>
  401e52:	eb b4                	jmp    401e08 <populate_seg_zero+0x28>
  401e54:	0f 1f 40 00          	nopl   0x0(%rax)
  401e58:	48 83 c4 08          	add    $0x8,%rsp
  401e5c:	5b                   	pop    %rbx
  401e5d:	5d                   	pop    %rbp
  401e5e:	41 5c                	pop    %r12
  401e60:	41 5d                	pop    %r13
  401e62:	41 5e                	pop    %r14
  401e64:	41 5f                	pop    %r15
  401e66:	c3                   	retq   
  401e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401e6e:	00 00 
  401e70:	ba 10 02 00 00       	mov    $0x210,%edx
  401e75:	be 3c 2d 40 00       	mov    $0x402d3c,%esi
  401e7a:	bf c8 3d 60 00       	mov    $0x603dc8,%edi
  401e7f:	e8 3c 00 00 00       	callq  401ec0 <Except_raise>
  401e84:	e9 73 ff ff ff       	jmpq   401dfc <populate_seg_zero+0x1c>
  401e89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401e90 <assert>:
  401e90:	85 ff                	test   %edi,%edi
  401e92:	74 0c                	je     401ea0 <assert+0x10>
  401e94:	f3 c3                	repz retq 
  401e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401e9d:	00 00 00 
  401ea0:	48 8d 3d 21 1f 20 00 	lea    0x201f21(%rip),%rdi        # 603dc8 <Assert_Failed>
  401ea7:	48 8d 35 72 0f 00 00 	lea    0xf72(%rip),%rsi        # 402e20 <_IO_stdin_used+0xe8>
  401eae:	ba 05 00 00 00       	mov    $0x5,%edx
  401eb3:	e9 08 00 00 00       	jmpq   401ec0 <Except_raise>
  401eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401ebf:	00 

0000000000401ec0 <Except_raise>:
  401ec0:	48 89 5c 24 d8       	mov    %rbx,-0x28(%rsp)
  401ec5:	48 89 6c 24 e0       	mov    %rbp,-0x20(%rsp)
  401eca:	48 89 fb             	mov    %rdi,%rbx
  401ecd:	4c 89 64 24 e8       	mov    %r12,-0x18(%rsp)
  401ed2:	4c 89 74 24 f8       	mov    %r14,-0x8(%rsp)
  401ed7:	49 89 f4             	mov    %rsi,%r12
  401eda:	4c 89 6c 24 f0       	mov    %r13,-0x10(%rsp)
  401edf:	48 83 ec 28          	sub    $0x28,%rsp
  401ee3:	4c 8d 35 06 22 20 00 	lea    0x202206(%rip),%r14        # 6040f0 <Except_stack>
  401eea:	48 85 ff             	test   %rdi,%rdi
  401eed:	89 d5                	mov    %edx,%ebp
  401eef:	4d 8b 2e             	mov    (%r14),%r13
  401ef2:	0f 84 a8 00 00 00    	je     401fa0 <Except_raise+0xe0>
  401ef8:	4d 85 ed             	test   %r13,%r13
  401efb:	74 33                	je     401f30 <Except_raise+0x70>
  401efd:	49 8b 06             	mov    (%r14),%rax
  401f00:	49 8d 7d 08          	lea    0x8(%r13),%rdi
  401f04:	49 89 9d e0 00 00 00 	mov    %rbx,0xe0(%r13)
  401f0b:	4d 89 a5 d0 00 00 00 	mov    %r12,0xd0(%r13)
  401f12:	41 89 ad d8 00 00 00 	mov    %ebp,0xd8(%r13)
  401f19:	be 01 00 00 00       	mov    $0x1,%esi
  401f1e:	48 8b 00             	mov    (%rax),%rax
  401f21:	49 89 06             	mov    %rax,(%r14)
  401f24:	e8 f7 eb ff ff       	callq  400b20 <longjmp@plt>
  401f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401f30:	4c 8b 2d c1 20 20 00 	mov    0x2020c1(%rip),%r13        # 603ff8 <stderr@@GLIBC_2.2.5-0xe8>
  401f37:	48 8d 3d 0d 0f 00 00 	lea    0xf0d(%rip),%rdi        # 402e4b <_IO_stdin_used+0x113>
  401f3e:	ba 12 00 00 00       	mov    $0x12,%edx
  401f43:	be 01 00 00 00       	mov    $0x1,%esi
  401f48:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  401f4c:	e8 ff eb ff ff       	callq  400b50 <fwrite@plt>
  401f51:	48 8b 13             	mov    (%rbx),%rdx
  401f54:	48 85 d2             	test   %rdx,%rdx
  401f57:	0f 84 83 00 00 00    	je     401fe0 <Except_raise+0x120>
  401f5d:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401f61:	48 8d 35 f6 0e 00 00 	lea    0xef6(%rip),%rsi        # 402e5e <_IO_stdin_used+0x126>
  401f68:	31 c0                	xor    %eax,%eax
  401f6a:	e8 41 eb ff ff       	callq  400ab0 <fprintf@plt>
  401f6f:	85 ed                	test   %ebp,%ebp
  401f71:	7f 4d                	jg     401fc0 <Except_raise+0x100>
  401f73:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  401f77:	48 8d 3d ff 0e 00 00 	lea    0xeff(%rip),%rdi        # 402e7d <_IO_stdin_used+0x145>
  401f7e:	ba 0c 00 00 00       	mov    $0xc,%edx
  401f83:	be 01 00 00 00       	mov    $0x1,%esi
  401f88:	e8 c3 eb ff ff       	callq  400b50 <fwrite@plt>
  401f8d:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401f91:	e8 6a eb ff ff       	callq  400b00 <fflush@plt>
  401f96:	e8 c5 ea ff ff       	callq  400a60 <abort@plt>
  401f9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401fa0:	48 8d 3d 21 1e 20 00 	lea    0x201e21(%rip),%rdi        # 603dc8 <Assert_Failed>
  401fa7:	48 8d 35 90 0e 00 00 	lea    0xe90(%rip),%rsi        # 402e3e <_IO_stdin_used+0x106>
  401fae:	ba 13 00 00 00       	mov    $0x13,%edx
  401fb3:	e8 08 ff ff ff       	callq  401ec0 <Except_raise>
  401fb8:	e9 3b ff ff ff       	jmpq   401ef8 <Except_raise+0x38>
  401fbd:	0f 1f 00             	nopl   (%rax)
  401fc0:	4d 85 e4             	test   %r12,%r12
  401fc3:	74 ae                	je     401f73 <Except_raise+0xb3>
  401fc5:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401fc9:	48 8d 35 9b 0e 00 00 	lea    0xe9b(%rip),%rsi        # 402e6b <_IO_stdin_used+0x133>
  401fd0:	89 e9                	mov    %ebp,%ecx
  401fd2:	4c 89 e2             	mov    %r12,%rdx
  401fd5:	31 c0                	xor    %eax,%eax
  401fd7:	e8 d4 ea ff ff       	callq  400ab0 <fprintf@plt>
  401fdc:	eb 95                	jmp    401f73 <Except_raise+0xb3>
  401fde:	66 90                	xchg   %ax,%ax
  401fe0:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401fe4:	48 8d 35 77 0e 00 00 	lea    0xe77(%rip),%rsi        # 402e62 <_IO_stdin_used+0x12a>
  401feb:	48 89 da             	mov    %rbx,%rdx
  401fee:	31 c0                	xor    %eax,%eax
  401ff0:	e8 bb ea ff ff       	callq  400ab0 <fprintf@plt>
  401ff5:	e9 75 ff ff ff       	jmpq   401f6f <Except_raise+0xaf>
  401ffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402000 <expand>:
  402000:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  402005:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  40200a:	48 83 ec 18          	sub    $0x18,%rsp
  40200e:	8b 2f                	mov    (%rdi),%ebp
  402010:	48 89 fb             	mov    %rdi,%rbx
  402013:	8d 74 2d 00          	lea    0x0(%rbp,%rbp,1),%esi
  402017:	e8 24 08 00 00       	callq  402840 <UArray_resize>
  40201c:	8b 43 14             	mov    0x14(%rbx),%eax
  40201f:	85 c0                	test   %eax,%eax
  402021:	7e 25                	jle    402048 <expand+0x48>
  402023:	48 63 f0             	movslq %eax,%rsi
  402026:	48 63 d5             	movslq %ebp,%rdx
  402029:	48 c1 e6 03          	shl    $0x3,%rsi
  40202d:	48 03 73 08          	add    0x8(%rbx),%rsi
  402031:	48 8d 3c d6          	lea    (%rsi,%rdx,8),%rdi
  402035:	89 ea                	mov    %ebp,%edx
  402037:	29 c2                	sub    %eax,%edx
  402039:	48 63 d2             	movslq %edx,%rdx
  40203c:	48 c1 e2 03          	shl    $0x3,%rdx
  402040:	e8 8b ea ff ff       	callq  400ad0 <memcpy@plt>
  402045:	01 6b 14             	add    %ebp,0x14(%rbx)
  402048:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40204d:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  402052:	48 83 c4 18          	add    $0x18,%rsp
  402056:	c3                   	retq   
  402057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40205e:	00 00 

0000000000402060 <Seq_new>:
  402060:	55                   	push   %rbp
  402061:	53                   	push   %rbx
  402062:	89 fb                	mov    %edi,%ebx
  402064:	48 83 ec 08          	sub    $0x8,%rsp
  402068:	85 ff                	test   %edi,%edi
  40206a:	78 5c                	js     4020c8 <Seq_new+0x68>
  40206c:	48 8d 15 17 0e 00 00 	lea    0xe17(%rip),%rdx        # 402e8a <_IO_stdin_used+0x152>
  402073:	b9 1d 00 00 00       	mov    $0x1d,%ecx
  402078:	be 18 00 00 00       	mov    $0x18,%esi
  40207d:	bf 01 00 00 00       	mov    $0x1,%edi
  402082:	e8 29 0a 00 00       	callq  402ab0 <Mem_calloc>
  402087:	85 db                	test   %ebx,%ebx
  402089:	48 89 c5             	mov    %rax,%rbp
  40208c:	75 70                	jne    4020fe <Seq_new+0x9e>
  40208e:	bf 80 00 00 00       	mov    $0x80,%edi
  402093:	bb 10 00 00 00       	mov    $0x10,%ebx
  402098:	48 8d 35 eb 0d 00 00 	lea    0xdeb(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  40209f:	ba 21 00 00 00       	mov    $0x21,%edx
  4020a4:	e8 47 09 00 00       	callq  4029f0 <Mem_alloc>
  4020a9:	89 de                	mov    %ebx,%esi
  4020ab:	48 89 c1             	mov    %rax,%rcx
  4020ae:	48 89 ef             	mov    %rbp,%rdi
  4020b1:	ba 08 00 00 00       	mov    $0x8,%edx
  4020b6:	e8 a5 04 00 00       	callq  402560 <UArrayRep_init>
  4020bb:	48 83 c4 08          	add    $0x8,%rsp
  4020bf:	48 89 e8             	mov    %rbp,%rax
  4020c2:	5b                   	pop    %rbx
  4020c3:	5d                   	pop    %rbp
  4020c4:	c3                   	retq   
  4020c5:	0f 1f 00             	nopl   (%rax)
  4020c8:	48 8d 3d f9 1c 20 00 	lea    0x201cf9(%rip),%rdi        # 603dc8 <Assert_Failed>
  4020cf:	48 8d 35 b4 0d 00 00 	lea    0xdb4(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  4020d6:	ba 1c 00 00 00       	mov    $0x1c,%edx
  4020db:	e8 e0 fd ff ff       	callq  401ec0 <Except_raise>
  4020e0:	48 8d 15 a3 0d 00 00 	lea    0xda3(%rip),%rdx        # 402e8a <_IO_stdin_used+0x152>
  4020e7:	b9 1d 00 00 00       	mov    $0x1d,%ecx
  4020ec:	be 18 00 00 00       	mov    $0x18,%esi
  4020f1:	bf 01 00 00 00       	mov    $0x1,%edi
  4020f6:	e8 b5 09 00 00       	callq  402ab0 <Mem_calloc>
  4020fb:	48 89 c5             	mov    %rax,%rbp
  4020fe:	48 63 fb             	movslq %ebx,%rdi
  402101:	48 c1 e7 03          	shl    $0x3,%rdi
  402105:	eb 91                	jmp    402098 <Seq_new+0x38>
  402107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40210e:	00 00 

0000000000402110 <Seq_free>:
  402110:	48 85 ff             	test   %rdi,%rdi
  402113:	53                   	push   %rbx
  402114:	48 89 fb             	mov    %rdi,%rbx
  402117:	74 17                	je     402130 <Seq_free+0x20>
  402119:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  40211d:	74 11                	je     402130 <Seq_free+0x20>
  40211f:	48 89 df             	mov    %rbx,%rdi
  402122:	5b                   	pop    %rbx
  402123:	e9 c8 05 00 00       	jmpq   4026f0 <UArray_free>
  402128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40212f:	00 
  402130:	48 8d 3d 91 1c 20 00 	lea    0x201c91(%rip),%rdi        # 603dc8 <Assert_Failed>
  402137:	48 8d 35 4c 0d 00 00 	lea    0xd4c(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  40213e:	ba 2e 00 00 00       	mov    $0x2e,%edx
  402143:	e8 78 fd ff ff       	callq  401ec0 <Except_raise>
  402148:	48 89 df             	mov    %rbx,%rdi
  40214b:	5b                   	pop    %rbx
  40214c:	e9 9f 05 00 00       	jmpq   4026f0 <UArray_free>
  402151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40215f:	00 

0000000000402160 <Seq_length>:
  402160:	48 85 ff             	test   %rdi,%rdi
  402163:	53                   	push   %rbx
  402164:	48 89 fb             	mov    %rdi,%rbx
  402167:	74 07                	je     402170 <Seq_length+0x10>
  402169:	8b 43 10             	mov    0x10(%rbx),%eax
  40216c:	5b                   	pop    %rbx
  40216d:	c3                   	retq   
  40216e:	66 90                	xchg   %ax,%ax
  402170:	48 8d 3d 51 1c 20 00 	lea    0x201c51(%rip),%rdi        # 603dc8 <Assert_Failed>
  402177:	48 8d 35 0c 0d 00 00 	lea    0xd0c(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  40217e:	ba 33 00 00 00       	mov    $0x33,%edx
  402183:	e8 38 fd ff ff       	callq  401ec0 <Except_raise>
  402188:	8b 43 10             	mov    0x10(%rbx),%eax
  40218b:	5b                   	pop    %rbx
  40218c:	c3                   	retq   
  40218d:	0f 1f 00             	nopl   (%rax)

0000000000402190 <Seq_get>:
  402190:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  402195:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  40219a:	48 83 ec 18          	sub    $0x18,%rsp
  40219e:	48 85 ff             	test   %rdi,%rdi
  4021a1:	48 89 fb             	mov    %rdi,%rbx
  4021a4:	89 f5                	mov    %esi,%ebp
  4021a6:	74 48                	je     4021f0 <Seq_get+0x60>
  4021a8:	85 ed                	test   %ebp,%ebp
  4021aa:	78 05                	js     4021b1 <Seq_get+0x21>
  4021ac:	3b 6b 10             	cmp    0x10(%rbx),%ebp
  4021af:	7c 18                	jl     4021c9 <Seq_get+0x39>
  4021b1:	48 8d 3d 10 1c 20 00 	lea    0x201c10(%rip),%rdi        # 603dc8 <Assert_Failed>
  4021b8:	48 8d 35 cb 0c 00 00 	lea    0xccb(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  4021bf:	ba 38 00 00 00       	mov    $0x38,%edx
  4021c4:	e8 f7 fc ff ff       	callq  401ec0 <Except_raise>
  4021c9:	8b 43 14             	mov    0x14(%rbx),%eax
  4021cc:	01 e8                	add    %ebp,%eax
  4021ce:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4021d3:	89 c2                	mov    %eax,%edx
  4021d5:	c1 fa 1f             	sar    $0x1f,%edx
  4021d8:	f7 3b                	idivl  (%rbx)
  4021da:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4021de:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4021e3:	48 63 d2             	movslq %edx,%rdx
  4021e6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  4021ea:	48 83 c4 18          	add    $0x18,%rsp
  4021ee:	c3                   	retq   
  4021ef:	90                   	nop
  4021f0:	48 8d 3d d1 1b 20 00 	lea    0x201bd1(%rip),%rdi        # 603dc8 <Assert_Failed>
  4021f7:	48 8d 35 8c 0c 00 00 	lea    0xc8c(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  4021fe:	ba 37 00 00 00       	mov    $0x37,%edx
  402203:	e8 b8 fc ff ff       	callq  401ec0 <Except_raise>
  402208:	eb 9e                	jmp    4021a8 <Seq_get+0x18>
  40220a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402210 <Seq_put>:
  402210:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
  402215:	48 89 6c 24 f0       	mov    %rbp,-0x10(%rsp)
  40221a:	48 89 fb             	mov    %rdi,%rbx
  40221d:	4c 89 64 24 f8       	mov    %r12,-0x8(%rsp)
  402222:	48 83 ec 18          	sub    $0x18,%rsp
  402226:	48 85 ff             	test   %rdi,%rdi
  402229:	41 89 f4             	mov    %esi,%r12d
  40222c:	48 89 d5             	mov    %rdx,%rbp
  40222f:	74 57                	je     402288 <Seq_put+0x78>
  402231:	45 85 e4             	test   %r12d,%r12d
  402234:	78 06                	js     40223c <Seq_put+0x2c>
  402236:	44 3b 63 10          	cmp    0x10(%rbx),%r12d
  40223a:	7c 18                	jl     402254 <Seq_put+0x44>
  40223c:	48 8d 3d 85 1b 20 00 	lea    0x201b85(%rip),%rdi        # 603dc8 <Assert_Failed>
  402243:	48 8d 35 40 0c 00 00 	lea    0xc40(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  40224a:	ba 3f 00 00 00       	mov    $0x3f,%edx
  40224f:	e8 6c fc ff ff       	callq  401ec0 <Except_raise>
  402254:	8b 43 14             	mov    0x14(%rbx),%eax
  402257:	44 01 e0             	add    %r12d,%eax
  40225a:	89 c2                	mov    %eax,%edx
  40225c:	c1 fa 1f             	sar    $0x1f,%edx
  40225f:	f7 3b                	idivl  (%rbx)
  402261:	48 63 d2             	movslq %edx,%rdx
  402264:	48 c1 e2 03          	shl    $0x3,%rdx
  402268:	48 03 53 08          	add    0x8(%rbx),%rdx
  40226c:	48 8b 02             	mov    (%rdx),%rax
  40226f:	48 89 2a             	mov    %rbp,(%rdx)
  402272:	48 8b 1c 24          	mov    (%rsp),%rbx
  402276:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
  40227b:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
  402280:	48 83 c4 18          	add    $0x18,%rsp
  402284:	c3                   	retq   
  402285:	0f 1f 00             	nopl   (%rax)
  402288:	48 8d 3d 39 1b 20 00 	lea    0x201b39(%rip),%rdi        # 603dc8 <Assert_Failed>
  40228f:	48 8d 35 f4 0b 00 00 	lea    0xbf4(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  402296:	ba 3e 00 00 00       	mov    $0x3e,%edx
  40229b:	e8 20 fc ff ff       	callq  401ec0 <Except_raise>
  4022a0:	eb 8f                	jmp    402231 <Seq_put+0x21>
  4022a2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4022a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004022b0 <Seq_remhi>:
  4022b0:	48 85 ff             	test   %rdi,%rdi
  4022b3:	53                   	push   %rbx
  4022b4:	48 89 fb             	mov    %rdi,%rbx
  4022b7:	74 47                	je     402300 <Seq_remhi+0x50>
  4022b9:	8b 43 10             	mov    0x10(%rbx),%eax
  4022bc:	85 c0                	test   %eax,%eax
  4022be:	7e 20                	jle    4022e0 <Seq_remhi+0x30>
  4022c0:	83 e8 01             	sub    $0x1,%eax
  4022c3:	89 43 10             	mov    %eax,0x10(%rbx)
  4022c6:	03 43 14             	add    0x14(%rbx),%eax
  4022c9:	89 c2                	mov    %eax,%edx
  4022cb:	c1 fa 1f             	sar    $0x1f,%edx
  4022ce:	f7 3b                	idivl  (%rbx)
  4022d0:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4022d4:	5b                   	pop    %rbx
  4022d5:	48 63 d2             	movslq %edx,%rdx
  4022d8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  4022dc:	c3                   	retq   
  4022dd:	0f 1f 00             	nopl   (%rax)
  4022e0:	48 8d 3d e1 1a 20 00 	lea    0x201ae1(%rip),%rdi        # 603dc8 <Assert_Failed>
  4022e7:	48 8d 35 9c 0b 00 00 	lea    0xb9c(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  4022ee:	ba 49 00 00 00       	mov    $0x49,%edx
  4022f3:	e8 c8 fb ff ff       	callq  401ec0 <Except_raise>
  4022f8:	8b 43 10             	mov    0x10(%rbx),%eax
  4022fb:	eb c3                	jmp    4022c0 <Seq_remhi+0x10>
  4022fd:	0f 1f 00             	nopl   (%rax)
  402300:	48 8d 3d c1 1a 20 00 	lea    0x201ac1(%rip),%rdi        # 603dc8 <Assert_Failed>
  402307:	48 8d 35 7c 0b 00 00 	lea    0xb7c(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  40230e:	ba 48 00 00 00       	mov    $0x48,%edx
  402313:	e8 a8 fb ff ff       	callq  401ec0 <Except_raise>
  402318:	eb 9f                	jmp    4022b9 <Seq_remhi+0x9>
  40231a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402320 <Seq_remlo>:
  402320:	48 85 ff             	test   %rdi,%rdi
  402323:	53                   	push   %rbx
  402324:	48 89 fb             	mov    %rdi,%rbx
  402327:	74 5f                	je     402388 <Seq_remlo+0x68>
  402329:	8b 7b 10             	mov    0x10(%rbx),%edi
  40232c:	85 ff                	test   %edi,%edi
  40232e:	7e 38                	jle    402368 <Seq_remlo+0x48>
  402330:	8b 73 14             	mov    0x14(%rbx),%esi
  402333:	8b 0b                	mov    (%rbx),%ecx
  402335:	83 ef 01             	sub    $0x1,%edi
  402338:	89 f2                	mov    %esi,%edx
  40233a:	89 f0                	mov    %esi,%eax
  40233c:	c1 fa 1f             	sar    $0x1f,%edx
  40233f:	f7 f9                	idiv   %ecx
  402341:	48 8b 43 08          	mov    0x8(%rbx),%rax
  402345:	48 63 d2             	movslq %edx,%rdx
  402348:	4c 8b 04 d0          	mov    (%rax,%rdx,8),%r8
  40234c:	8d 46 01             	lea    0x1(%rsi),%eax
  40234f:	89 7b 10             	mov    %edi,0x10(%rbx)
  402352:	89 c2                	mov    %eax,%edx
  402354:	c1 fa 1f             	sar    $0x1f,%edx
  402357:	f7 f9                	idiv   %ecx
  402359:	4c 89 c0             	mov    %r8,%rax
  40235c:	89 53 14             	mov    %edx,0x14(%rbx)
  40235f:	5b                   	pop    %rbx
  402360:	c3                   	retq   
  402361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402368:	48 8d 3d 59 1a 20 00 	lea    0x201a59(%rip),%rdi        # 603dc8 <Assert_Failed>
  40236f:	48 8d 35 14 0b 00 00 	lea    0xb14(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  402376:	ba 52 00 00 00       	mov    $0x52,%edx
  40237b:	e8 40 fb ff ff       	callq  401ec0 <Except_raise>
  402380:	8b 7b 10             	mov    0x10(%rbx),%edi
  402383:	eb ab                	jmp    402330 <Seq_remlo+0x10>
  402385:	0f 1f 00             	nopl   (%rax)
  402388:	48 8d 3d 39 1a 20 00 	lea    0x201a39(%rip),%rdi        # 603dc8 <Assert_Failed>
  40238f:	48 8d 35 f4 0a 00 00 	lea    0xaf4(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  402396:	ba 51 00 00 00       	mov    $0x51,%edx
  40239b:	e8 20 fb ff ff       	callq  401ec0 <Except_raise>
  4023a0:	eb 87                	jmp    402329 <Seq_remlo+0x9>
  4023a2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4023a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004023b0 <Seq_addhi>:
  4023b0:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  4023b5:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  4023ba:	48 83 ec 18          	sub    $0x18,%rsp
  4023be:	48 85 ff             	test   %rdi,%rdi
  4023c1:	48 89 fb             	mov    %rdi,%rbx
  4023c4:	48 89 f5             	mov    %rsi,%rbp
  4023c7:	74 47                	je     402410 <Seq_addhi+0x60>
  4023c9:	8b 43 10             	mov    0x10(%rbx),%eax
  4023cc:	8b 0b                	mov    (%rbx),%ecx
  4023ce:	39 c8                	cmp    %ecx,%eax
  4023d0:	74 2e                	je     402400 <Seq_addhi+0x50>
  4023d2:	8d 50 01             	lea    0x1(%rax),%edx
  4023d5:	03 43 14             	add    0x14(%rbx),%eax
  4023d8:	89 53 10             	mov    %edx,0x10(%rbx)
  4023db:	89 c2                	mov    %eax,%edx
  4023dd:	c1 fa 1f             	sar    $0x1f,%edx
  4023e0:	f7 f9                	idiv   %ecx
  4023e2:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4023e6:	48 63 d2             	movslq %edx,%rdx
  4023e9:	48 89 2c d0          	mov    %rbp,(%rax,%rdx,8)
  4023ed:	48 89 e8             	mov    %rbp,%rax
  4023f0:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4023f5:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4023fa:	48 83 c4 18          	add    $0x18,%rsp
  4023fe:	c3                   	retq   
  4023ff:	90                   	nop
  402400:	48 89 df             	mov    %rbx,%rdi
  402403:	e8 f8 fb ff ff       	callq  402000 <expand>
  402408:	8b 43 10             	mov    0x10(%rbx),%eax
  40240b:	8b 0b                	mov    (%rbx),%ecx
  40240d:	eb c3                	jmp    4023d2 <Seq_addhi+0x22>
  40240f:	90                   	nop
  402410:	48 8d 3d b1 19 20 00 	lea    0x2019b1(%rip),%rdi        # 603dc8 <Assert_Failed>
  402417:	48 8d 35 6c 0a 00 00 	lea    0xa6c(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  40241e:	ba 5b 00 00 00       	mov    $0x5b,%edx
  402423:	e8 98 fa ff ff       	callq  401ec0 <Except_raise>
  402428:	eb 9f                	jmp    4023c9 <Seq_addhi+0x19>
  40242a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402430 <Seq_seq>:
  402430:	53                   	push   %rbx
  402431:	48 83 ec 60          	sub    $0x60,%rsp
  402435:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
  40243a:	48 89 fe             	mov    %rdi,%rsi
  40243d:	31 ff                	xor    %edi,%edi
  40243f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  402444:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  402449:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  40244e:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
  402453:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
  402458:	e8 03 fc ff ff       	callq  402060 <Seq_new>
  40245d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  402462:	48 89 c3             	mov    %rax,%rbx
  402465:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
  40246a:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
  402471:	00 
  402472:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  402477:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  40247c:	48 85 f6             	test   %rsi,%rsi
  40247f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  402484:	75 20                	jne    4024a6 <Seq_seq+0x76>
  402486:	eb 45                	jmp    4024cd <Seq_seq+0x9d>
  402488:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40248f:	00 
  402490:	89 d0                	mov    %edx,%eax
  402492:	48 03 44 24 20       	add    0x20(%rsp),%rax
  402497:	83 c2 08             	add    $0x8,%edx
  40249a:	89 54 24 10          	mov    %edx,0x10(%rsp)
  40249e:	48 8b 30             	mov    (%rax),%rsi
  4024a1:	48 85 f6             	test   %rsi,%rsi
  4024a4:	74 27                	je     4024cd <Seq_seq+0x9d>
  4024a6:	48 89 df             	mov    %rbx,%rdi
  4024a9:	e8 02 ff ff ff       	callq  4023b0 <Seq_addhi>
  4024ae:	8b 54 24 10          	mov    0x10(%rsp),%edx
  4024b2:	83 fa 30             	cmp    $0x30,%edx
  4024b5:	72 d9                	jb     402490 <Seq_seq+0x60>
  4024b7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4024bc:	48 8d 50 08          	lea    0x8(%rax),%rdx
  4024c0:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
  4024c5:	48 8b 30             	mov    (%rax),%rsi
  4024c8:	48 85 f6             	test   %rsi,%rsi
  4024cb:	75 d9                	jne    4024a6 <Seq_seq+0x76>
  4024cd:	48 89 d8             	mov    %rbx,%rax
  4024d0:	48 83 c4 60          	add    $0x60,%rsp
  4024d4:	5b                   	pop    %rbx
  4024d5:	c3                   	retq   
  4024d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4024dd:	00 00 00 

00000000004024e0 <Seq_addlo>:
  4024e0:	55                   	push   %rbp
  4024e1:	48 89 f5             	mov    %rsi,%rbp
  4024e4:	53                   	push   %rbx
  4024e5:	48 89 fb             	mov    %rdi,%rbx
  4024e8:	48 83 ec 08          	sub    $0x8,%rsp
  4024ec:	48 85 ff             	test   %rdi,%rdi
  4024ef:	74 4f                	je     402540 <Seq_addlo+0x60>
  4024f1:	8b 0b                	mov    (%rbx),%ecx
  4024f3:	39 4b 10             	cmp    %ecx,0x10(%rbx)
  4024f6:	74 38                	je     402530 <Seq_addlo+0x50>
  4024f8:	8b 43 14             	mov    0x14(%rbx),%eax
  4024fb:	83 e8 01             	sub    $0x1,%eax
  4024fe:	85 c0                	test   %eax,%eax
  402500:	89 43 14             	mov    %eax,0x14(%rbx)
  402503:	79 06                	jns    40250b <Seq_addlo+0x2b>
  402505:	8d 41 ff             	lea    -0x1(%rcx),%eax
  402508:	89 43 14             	mov    %eax,0x14(%rbx)
  40250b:	89 c2                	mov    %eax,%edx
  40250d:	83 43 10 01          	addl   $0x1,0x10(%rbx)
  402511:	c1 fa 1f             	sar    $0x1f,%edx
  402514:	f7 f9                	idiv   %ecx
  402516:	48 8b 43 08          	mov    0x8(%rbx),%rax
  40251a:	48 63 d2             	movslq %edx,%rdx
  40251d:	48 89 2c d0          	mov    %rbp,(%rax,%rdx,8)
  402521:	48 83 c4 08          	add    $0x8,%rsp
  402525:	48 89 e8             	mov    %rbp,%rax
  402528:	5b                   	pop    %rbx
  402529:	5d                   	pop    %rbp
  40252a:	c3                   	retq   
  40252b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402530:	48 89 df             	mov    %rbx,%rdi
  402533:	e8 c8 fa ff ff       	callq  402000 <expand>
  402538:	8b 0b                	mov    (%rbx),%ecx
  40253a:	eb bc                	jmp    4024f8 <Seq_addlo+0x18>
  40253c:	0f 1f 40 00          	nopl   0x0(%rax)
  402540:	48 8d 3d 81 18 20 00 	lea    0x201881(%rip),%rdi        # 603dc8 <Assert_Failed>
  402547:	48 8d 35 3c 09 00 00 	lea    0x93c(%rip),%rsi        # 402e8a <_IO_stdin_used+0x152>
  40254e:	ba 64 00 00 00       	mov    $0x64,%edx
  402553:	e8 68 f9 ff ff       	callq  401ec0 <Except_raise>
  402558:	eb 97                	jmp    4024f1 <Seq_addlo+0x11>
  40255a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402560 <UArrayRep_init>:
  402560:	48 89 5c 24 e0       	mov    %rbx,-0x20(%rsp)
  402565:	48 89 6c 24 e8       	mov    %rbp,-0x18(%rsp)
  40256a:	48 89 fb             	mov    %rdi,%rbx
  40256d:	4c 89 64 24 f0       	mov    %r12,-0x10(%rsp)
  402572:	4c 89 6c 24 f8       	mov    %r13,-0x8(%rsp)
  402577:	48 83 ec 38          	sub    $0x38,%rsp
  40257b:	48 85 ff             	test   %rdi,%rdi
  40257e:	89 f5                	mov    %esi,%ebp
  402580:	41 89 d4             	mov    %edx,%r12d
  402583:	0f 84 a7 00 00 00    	je     402630 <UArrayRep_init+0xd0>
  402589:	85 ed                	test   %ebp,%ebp
  40258b:	41 0f 9f c5          	setg   %r13b
  40258f:	48 85 c9             	test   %rcx,%rcx
  402592:	74 3c                	je     4025d0 <UArrayRep_init+0x70>
  402594:	45 84 ed             	test   %r13b,%r13b
  402597:	74 37                	je     4025d0 <UArrayRep_init+0x70>
  402599:	45 85 e4             	test   %r12d,%r12d
  40259c:	7e 62                	jle    402600 <UArrayRep_init+0xa0>
  40259e:	31 c0                	xor    %eax,%eax
  4025a0:	45 84 ed             	test   %r13b,%r13b
  4025a3:	89 2b                	mov    %ebp,(%rbx)
  4025a5:	48 0f 45 c1          	cmovne %rcx,%rax
  4025a9:	44 89 63 04          	mov    %r12d,0x4(%rbx)
  4025ad:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
  4025b2:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4025b6:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
  4025bb:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  4025c0:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
  4025c5:	48 83 c4 38          	add    $0x38,%rsp
  4025c9:	c3                   	retq   
  4025ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4025d0:	48 85 c9             	test   %rcx,%rcx
  4025d3:	75 04                	jne    4025d9 <UArrayRep_init+0x79>
  4025d5:	85 ed                	test   %ebp,%ebp
  4025d7:	74 c0                	je     402599 <UArrayRep_init+0x39>
  4025d9:	48 8d 3d e8 17 20 00 	lea    0x2017e8(%rip),%rdi        # 603dc8 <Assert_Failed>
  4025e0:	48 8d 35 ad 08 00 00 	lea    0x8ad(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  4025e7:	ba 14 00 00 00       	mov    $0x14,%edx
  4025ec:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  4025f1:	e8 ca f8 ff ff       	callq  401ec0 <Except_raise>
  4025f6:	45 85 e4             	test   %r12d,%r12d
  4025f9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  4025fe:	7f 9e                	jg     40259e <UArrayRep_init+0x3e>
  402600:	48 8d 3d c1 17 20 00 	lea    0x2017c1(%rip),%rdi        # 603dc8 <Assert_Failed>
  402607:	48 8d 35 86 08 00 00 	lea    0x886(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  40260e:	ba 15 00 00 00       	mov    $0x15,%edx
  402613:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  402618:	e8 a3 f8 ff ff       	callq  401ec0 <Except_raise>
  40261d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  402622:	e9 77 ff ff ff       	jmpq   40259e <UArrayRep_init+0x3e>
  402627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40262e:	00 00 
  402630:	48 8d 3d 91 17 20 00 	lea    0x201791(%rip),%rdi        # 603dc8 <Assert_Failed>
  402637:	48 8d 35 56 08 00 00 	lea    0x856(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  40263e:	ba 13 00 00 00       	mov    $0x13,%edx
  402643:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  402648:	e8 73 f8 ff ff       	callq  401ec0 <Except_raise>
  40264d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  402652:	e9 32 ff ff ff       	jmpq   402589 <UArrayRep_init+0x29>
  402657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40265e:	00 00 

0000000000402660 <UArray_new>:
  402660:	4c 89 64 24 f8       	mov    %r12,-0x8(%rsp)
  402665:	41 89 f4             	mov    %esi,%r12d
  402668:	48 8d 35 25 08 00 00 	lea    0x825(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  40266f:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
  402674:	48 89 6c 24 f0       	mov    %rbp,-0x10(%rsp)
  402679:	89 fb                	mov    %edi,%ebx
  40267b:	48 83 ec 18          	sub    $0x18,%rsp
  40267f:	ba 0b 00 00 00       	mov    $0xb,%edx
  402684:	bf 10 00 00 00       	mov    $0x10,%edi
  402689:	e8 62 03 00 00       	callq  4029f0 <Mem_alloc>
  40268e:	85 db                	test   %ebx,%ebx
  402690:	48 89 c5             	mov    %rax,%rbp
  402693:	7e 43                	jle    4026d8 <UArray_new+0x78>
  402695:	48 8d 15 f8 07 00 00 	lea    0x7f8(%rip),%rdx        # 402e94 <_IO_stdin_used+0x15c>
  40269c:	49 63 f4             	movslq %r12d,%rsi
  40269f:	48 63 fb             	movslq %ebx,%rdi
  4026a2:	b9 0d 00 00 00       	mov    $0xd,%ecx
  4026a7:	e8 04 04 00 00       	callq  402ab0 <Mem_calloc>
  4026ac:	44 89 e2             	mov    %r12d,%edx
  4026af:	48 89 c1             	mov    %rax,%rcx
  4026b2:	89 de                	mov    %ebx,%esi
  4026b4:	48 89 ef             	mov    %rbp,%rdi
  4026b7:	e8 a4 fe ff ff       	callq  402560 <UArrayRep_init>
  4026bc:	48 89 e8             	mov    %rbp,%rax
  4026bf:	48 8b 1c 24          	mov    (%rsp),%rbx
  4026c3:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
  4026c8:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
  4026cd:	48 83 c4 18          	add    $0x18,%rsp
  4026d1:	c3                   	retq   
  4026d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4026d8:	31 c9                	xor    %ecx,%ecx
  4026da:	44 89 e2             	mov    %r12d,%edx
  4026dd:	89 de                	mov    %ebx,%esi
  4026df:	48 89 c7             	mov    %rax,%rdi
  4026e2:	e8 79 fe ff ff       	callq  402560 <UArrayRep_init>
  4026e7:	eb d3                	jmp    4026bc <UArray_new+0x5c>
  4026e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004026f0 <UArray_free>:
  4026f0:	48 85 ff             	test   %rdi,%rdi
  4026f3:	53                   	push   %rbx
  4026f4:	48 89 fb             	mov    %rdi,%rbx
  4026f7:	74 47                	je     402740 <UArray_free+0x50>
  4026f9:	48 8b 07             	mov    (%rdi),%rax
  4026fc:	48 85 c0             	test   %rax,%rax
  4026ff:	74 3f                	je     402740 <UArray_free+0x50>
  402701:	48 8b 78 08          	mov    0x8(%rax),%rdi
  402705:	48 8d 35 88 07 00 00 	lea    0x788(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  40270c:	ba 1f 00 00 00       	mov    $0x1f,%edx
  402711:	e8 8a 04 00 00       	callq  402ba0 <Mem_free>
  402716:	48 8b 3b             	mov    (%rbx),%rdi
  402719:	48 8d 35 74 07 00 00 	lea    0x774(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  402720:	ba 20 00 00 00       	mov    $0x20,%edx
  402725:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  40272c:	00 
  40272d:	e8 6e 04 00 00       	callq  402ba0 <Mem_free>
  402732:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
  402739:	5b                   	pop    %rbx
  40273a:	c3                   	retq   
  40273b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402740:	48 8d 3d 81 16 20 00 	lea    0x201681(%rip),%rdi        # 603dc8 <Assert_Failed>
  402747:	48 8d 35 46 07 00 00 	lea    0x746(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  40274e:	ba 1e 00 00 00       	mov    $0x1e,%edx
  402753:	e8 68 f7 ff ff       	callq  401ec0 <Except_raise>
  402758:	48 8b 03             	mov    (%rbx),%rax
  40275b:	eb a4                	jmp    402701 <UArray_free+0x11>
  40275d:	0f 1f 00             	nopl   (%rax)

0000000000402760 <UArray_at>:
  402760:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  402765:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  40276a:	48 83 ec 18          	sub    $0x18,%rsp
  40276e:	48 85 ff             	test   %rdi,%rdi
  402771:	48 89 fb             	mov    %rdi,%rbx
  402774:	89 f5                	mov    %esi,%ebp
  402776:	74 40                	je     4027b8 <UArray_at+0x58>
  402778:	85 ed                	test   %ebp,%ebp
  40277a:	78 04                	js     402780 <UArray_at+0x20>
  40277c:	3b 2b                	cmp    (%rbx),%ebp
  40277e:	7c 18                	jl     402798 <UArray_at+0x38>
  402780:	48 8d 3d 41 16 20 00 	lea    0x201641(%rip),%rdi        # 603dc8 <Assert_Failed>
  402787:	48 8d 35 06 07 00 00 	lea    0x706(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  40278e:	ba 24 00 00 00       	mov    $0x24,%edx
  402793:	e8 28 f7 ff ff       	callq  401ec0 <Except_raise>
  402798:	0f af 6b 04          	imul   0x4(%rbx),%ebp
  40279c:	48 63 c5             	movslq %ebp,%rax
  40279f:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4027a4:	48 03 43 08          	add    0x8(%rbx),%rax
  4027a8:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4027ad:	48 83 c4 18          	add    $0x18,%rsp
  4027b1:	c3                   	retq   
  4027b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4027b8:	48 8d 3d 09 16 20 00 	lea    0x201609(%rip),%rdi        # 603dc8 <Assert_Failed>
  4027bf:	48 8d 35 ce 06 00 00 	lea    0x6ce(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  4027c6:	ba 23 00 00 00       	mov    $0x23,%edx
  4027cb:	e8 f0 f6 ff ff       	callq  401ec0 <Except_raise>
  4027d0:	eb a6                	jmp    402778 <UArray_at+0x18>
  4027d2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4027d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004027e0 <UArray_length>:
  4027e0:	48 85 ff             	test   %rdi,%rdi
  4027e3:	53                   	push   %rbx
  4027e4:	48 89 fb             	mov    %rdi,%rbx
  4027e7:	74 07                	je     4027f0 <UArray_length+0x10>
  4027e9:	8b 03                	mov    (%rbx),%eax
  4027eb:	5b                   	pop    %rbx
  4027ec:	c3                   	retq   
  4027ed:	0f 1f 00             	nopl   (%rax)
  4027f0:	48 8d 3d d1 15 20 00 	lea    0x2015d1(%rip),%rdi        # 603dc8 <Assert_Failed>
  4027f7:	48 8d 35 96 06 00 00 	lea    0x696(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  4027fe:	ba 28 00 00 00       	mov    $0x28,%edx
  402803:	e8 b8 f6 ff ff       	callq  401ec0 <Except_raise>
  402808:	8b 03                	mov    (%rbx),%eax
  40280a:	5b                   	pop    %rbx
  40280b:	c3                   	retq   
  40280c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402810 <UArray_size>:
  402810:	48 85 ff             	test   %rdi,%rdi
  402813:	53                   	push   %rbx
  402814:	48 89 fb             	mov    %rdi,%rbx
  402817:	74 07                	je     402820 <UArray_size+0x10>
  402819:	8b 43 04             	mov    0x4(%rbx),%eax
  40281c:	5b                   	pop    %rbx
  40281d:	c3                   	retq   
  40281e:	66 90                	xchg   %ax,%ax
  402820:	48 8d 3d a1 15 20 00 	lea    0x2015a1(%rip),%rdi        # 603dc8 <Assert_Failed>
  402827:	48 8d 35 66 06 00 00 	lea    0x666(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  40282e:	ba 2c 00 00 00       	mov    $0x2c,%edx
  402833:	e8 88 f6 ff ff       	callq  401ec0 <Except_raise>
  402838:	8b 43 04             	mov    0x4(%rbx),%eax
  40283b:	5b                   	pop    %rbx
  40283c:	c3                   	retq   
  40283d:	0f 1f 00             	nopl   (%rax)

0000000000402840 <UArray_resize>:
  402840:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  402845:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  40284a:	48 83 ec 18          	sub    $0x18,%rsp
  40284e:	48 85 ff             	test   %rdi,%rdi
  402851:	48 89 fb             	mov    %rdi,%rbx
  402854:	89 f5                	mov    %esi,%ebp
  402856:	0f 84 a4 00 00 00    	je     402900 <UArray_resize+0xc0>
  40285c:	83 fd 00             	cmp    $0x0,%ebp
  40285f:	0f 8c 7b 00 00 00    	jl     4028e0 <UArray_resize+0xa0>
  402865:	74 59                	je     4028c0 <UArray_resize+0x80>
  402867:	8b 03                	mov    (%rbx),%eax
  402869:	85 c0                	test   %eax,%eax
  40286b:	74 33                	je     4028a0 <UArray_resize+0x60>
  40286d:	8b 73 04             	mov    0x4(%rbx),%esi
  402870:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  402874:	48 8d 15 19 06 00 00 	lea    0x619(%rip),%rdx        # 402e94 <_IO_stdin_used+0x15c>
  40287b:	b9 37 00 00 00       	mov    $0x37,%ecx
  402880:	0f af f5             	imul   %ebp,%esi
  402883:	48 63 f6             	movslq %esi,%rsi
  402886:	e8 35 03 00 00       	callq  402bc0 <Mem_resize>
  40288b:	48 89 43 08          	mov    %rax,0x8(%rbx)
  40288f:	89 2b                	mov    %ebp,(%rbx)
  402891:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  402896:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  40289b:	48 83 c4 18          	add    $0x18,%rsp
  40289f:	c3                   	retq   
  4028a0:	8b 7b 04             	mov    0x4(%rbx),%edi
  4028a3:	48 8d 35 ea 05 00 00 	lea    0x5ea(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  4028aa:	ba 35 00 00 00       	mov    $0x35,%edx
  4028af:	0f af fd             	imul   %ebp,%edi
  4028b2:	48 63 ff             	movslq %edi,%rdi
  4028b5:	e8 36 01 00 00       	callq  4029f0 <Mem_alloc>
  4028ba:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4028be:	eb cf                	jmp    40288f <UArray_resize+0x4f>
  4028c0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  4028c4:	48 8d 35 c9 05 00 00 	lea    0x5c9(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  4028cb:	ba 33 00 00 00       	mov    $0x33,%edx
  4028d0:	e8 cb 02 00 00       	callq  402ba0 <Mem_free>
  4028d5:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
  4028dc:	00 
  4028dd:	eb b0                	jmp    40288f <UArray_resize+0x4f>
  4028df:	90                   	nop
  4028e0:	48 8d 3d e1 14 20 00 	lea    0x2014e1(%rip),%rdi        # 603dc8 <Assert_Failed>
  4028e7:	48 8d 35 a6 05 00 00 	lea    0x5a6(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  4028ee:	ba 31 00 00 00       	mov    $0x31,%edx
  4028f3:	e8 c8 f5 ff ff       	callq  401ec0 <Except_raise>
  4028f8:	e9 6a ff ff ff       	jmpq   402867 <UArray_resize+0x27>
  4028fd:	0f 1f 00             	nopl   (%rax)
  402900:	48 8d 3d c1 14 20 00 	lea    0x2014c1(%rip),%rdi        # 603dc8 <Assert_Failed>
  402907:	48 8d 35 86 05 00 00 	lea    0x586(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  40290e:	ba 30 00 00 00       	mov    $0x30,%edx
  402913:	e8 a8 f5 ff ff       	callq  401ec0 <Except_raise>
  402918:	e9 3f ff ff ff       	jmpq   40285c <UArray_resize+0x1c>
  40291d:	0f 1f 00             	nopl   (%rax)

0000000000402920 <UArray_copy>:
  402920:	55                   	push   %rbp
  402921:	89 f5                	mov    %esi,%ebp
  402923:	53                   	push   %rbx
  402924:	48 89 fb             	mov    %rdi,%rbx
  402927:	48 83 ec 08          	sub    $0x8,%rsp
  40292b:	48 85 ff             	test   %rdi,%rdi
  40292e:	0f 84 94 00 00 00    	je     4029c8 <UArray_copy+0xa8>
  402934:	85 ed                	test   %ebp,%ebp
  402936:	78 70                	js     4029a8 <UArray_copy+0x88>
  402938:	8b 73 04             	mov    0x4(%rbx),%esi
  40293b:	89 ef                	mov    %ebp,%edi
  40293d:	e8 1e fd ff ff       	callq  402660 <UArray_new>
  402942:	8b 10                	mov    (%rax),%edx
  402944:	48 89 c5             	mov    %rax,%rbp
  402947:	8b 03                	mov    (%rbx),%eax
  402949:	39 c2                	cmp    %eax,%edx
  40294b:	7c 33                	jl     402980 <UArray_copy+0x60>
  40294d:	85 c0                	test   %eax,%eax
  40294f:	7f 0f                	jg     402960 <UArray_copy+0x40>
  402951:	48 83 c4 08          	add    $0x8,%rsp
  402955:	48 89 e8             	mov    %rbp,%rax
  402958:	5b                   	pop    %rbx
  402959:	5d                   	pop    %rbp
  40295a:	c3                   	retq   
  40295b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402960:	0f af 43 04          	imul   0x4(%rbx),%eax
  402964:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
  402968:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  40296c:	48 63 d0             	movslq %eax,%rdx
  40296f:	e8 5c e1 ff ff       	callq  400ad0 <memcpy@plt>
  402974:	48 83 c4 08          	add    $0x8,%rsp
  402978:	48 89 e8             	mov    %rbp,%rax
  40297b:	5b                   	pop    %rbx
  40297c:	5d                   	pop    %rbp
  40297d:	c3                   	retq   
  40297e:	66 90                	xchg   %ax,%ax
  402980:	85 d2                	test   %edx,%edx
  402982:	7e cd                	jle    402951 <UArray_copy+0x31>
  402984:	0f af 53 04          	imul   0x4(%rbx),%edx
  402988:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
  40298c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  402990:	48 63 d2             	movslq %edx,%rdx
  402993:	e8 38 e1 ff ff       	callq  400ad0 <memcpy@plt>
  402998:	48 83 c4 08          	add    $0x8,%rsp
  40299c:	48 89 e8             	mov    %rbp,%rax
  40299f:	5b                   	pop    %rbx
  4029a0:	5d                   	pop    %rbp
  4029a1:	c3                   	retq   
  4029a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4029a8:	48 8d 3d 19 14 20 00 	lea    0x201419(%rip),%rdi        # 603dc8 <Assert_Failed>
  4029af:	48 8d 35 de 04 00 00 	lea    0x4de(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  4029b6:	ba 3d 00 00 00       	mov    $0x3d,%edx
  4029bb:	e8 00 f5 ff ff       	callq  401ec0 <Except_raise>
  4029c0:	e9 73 ff ff ff       	jmpq   402938 <UArray_copy+0x18>
  4029c5:	0f 1f 00             	nopl   (%rax)
  4029c8:	48 8d 3d f9 13 20 00 	lea    0x2013f9(%rip),%rdi        # 603dc8 <Assert_Failed>
  4029cf:	48 8d 35 be 04 00 00 	lea    0x4be(%rip),%rsi        # 402e94 <_IO_stdin_used+0x15c>
  4029d6:	ba 3c 00 00 00       	mov    $0x3c,%edx
  4029db:	e8 e0 f4 ff ff       	callq  401ec0 <Except_raise>
  4029e0:	e9 4f ff ff ff       	jmpq   402934 <UArray_copy+0x14>
  4029e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4029ec:	00 00 00 
  4029ef:	90                   	nop

00000000004029f0 <Mem_alloc>:
  4029f0:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
  4029f5:	48 89 6c 24 f0       	mov    %rbp,-0x10(%rsp)
  4029fa:	48 89 f3             	mov    %rsi,%rbx
  4029fd:	4c 89 64 24 f8       	mov    %r12,-0x8(%rsp)
  402a02:	48 83 ec 28          	sub    $0x28,%rsp
  402a06:	48 85 ff             	test   %rdi,%rdi
  402a09:	49 89 fc             	mov    %rdi,%r12
  402a0c:	89 d5                	mov    %edx,%ebp
  402a0e:	7e 50                	jle    402a60 <Mem_alloc+0x70>
  402a10:	4c 89 e7             	mov    %r12,%rdi
  402a13:	e8 d8 e0 ff ff       	callq  400af0 <malloc@plt>
  402a18:	48 85 c0             	test   %rax,%rax
  402a1b:	74 1b                	je     402a38 <Mem_alloc+0x48>
  402a1d:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
  402a22:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
  402a27:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
  402a2c:	48 83 c4 28          	add    $0x28,%rsp
  402a30:	c3                   	retq   
  402a31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402a38:	48 85 db             	test   %rbx,%rbx
  402a3b:	74 43                	je     402a80 <Mem_alloc+0x90>
  402a3d:	48 8d 3d 8c 13 20 00 	lea    0x20138c(%rip),%rdi        # 603dd0 <Mem_Failed>
  402a44:	89 ea                	mov    %ebp,%edx
  402a46:	48 89 de             	mov    %rbx,%rsi
  402a49:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  402a4e:	e8 6d f4 ff ff       	callq  401ec0 <Except_raise>
  402a53:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  402a58:	eb c3                	jmp    402a1d <Mem_alloc+0x2d>
  402a5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402a60:	48 8d 3d 61 13 20 00 	lea    0x201361(%rip),%rdi        # 603dc8 <Assert_Failed>
  402a67:	48 8d 35 33 04 00 00 	lea    0x433(%rip),%rsi        # 402ea1 <_IO_stdin_used+0x169>
  402a6e:	ba 0a 00 00 00       	mov    $0xa,%edx
  402a73:	e8 48 f4 ff ff       	callq  401ec0 <Except_raise>
  402a78:	eb 96                	jmp    402a10 <Mem_alloc+0x20>
  402a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402a80:	48 8d 3d 49 13 20 00 	lea    0x201349(%rip),%rdi        # 603dd0 <Mem_Failed>
  402a87:	48 8d 35 13 04 00 00 	lea    0x413(%rip),%rsi        # 402ea1 <_IO_stdin_used+0x169>
  402a8e:	ba 0f 00 00 00       	mov    $0xf,%edx
  402a93:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  402a98:	e8 23 f4 ff ff       	callq  401ec0 <Except_raise>
  402a9d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  402aa2:	e9 76 ff ff ff       	jmpq   402a1d <Mem_alloc+0x2d>
  402aa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402aae:	00 00 

0000000000402ab0 <Mem_calloc>:
  402ab0:	48 89 5c 24 e0       	mov    %rbx,-0x20(%rsp)
  402ab5:	48 89 6c 24 e8       	mov    %rbp,-0x18(%rsp)
  402aba:	48 89 d3             	mov    %rdx,%rbx
  402abd:	4c 89 64 24 f0       	mov    %r12,-0x10(%rsp)
  402ac2:	4c 89 6c 24 f8       	mov    %r13,-0x8(%rsp)
  402ac7:	48 83 ec 38          	sub    $0x38,%rsp
  402acb:	48 85 ff             	test   %rdi,%rdi
  402ace:	48 89 fd             	mov    %rdi,%rbp
  402ad1:	49 89 f4             	mov    %rsi,%r12
  402ad4:	41 89 cd             	mov    %ecx,%r13d
  402ad7:	7e 5f                	jle    402b38 <Mem_calloc+0x88>
  402ad9:	4d 85 e4             	test   %r12,%r12
  402adc:	7e 7a                	jle    402b58 <Mem_calloc+0xa8>
  402ade:	4c 89 e6             	mov    %r12,%rsi
  402ae1:	48 89 ef             	mov    %rbp,%rdi
  402ae4:	e8 a7 df ff ff       	callq  400a90 <calloc@plt>
  402ae9:	48 85 c0             	test   %rax,%rax
  402aec:	74 22                	je     402b10 <Mem_calloc+0x60>
  402aee:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  402af3:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
  402af8:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
  402afd:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
  402b02:	48 83 c4 38          	add    $0x38,%rsp
  402b06:	c3                   	retq   
  402b07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402b0e:	00 00 
  402b10:	48 85 db             	test   %rbx,%rbx
  402b13:	74 63                	je     402b78 <Mem_calloc+0xc8>
  402b15:	48 8d 3d b4 12 20 00 	lea    0x2012b4(%rip),%rdi        # 603dd0 <Mem_Failed>
  402b1c:	44 89 ea             	mov    %r13d,%edx
  402b1f:	48 89 de             	mov    %rbx,%rsi
  402b22:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  402b27:	e8 94 f3 ff ff       	callq  401ec0 <Except_raise>
  402b2c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  402b31:	eb bb                	jmp    402aee <Mem_calloc+0x3e>
  402b33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402b38:	48 8d 3d 89 12 20 00 	lea    0x201289(%rip),%rdi        # 603dc8 <Assert_Failed>
  402b3f:	48 8d 35 5b 03 00 00 	lea    0x35b(%rip),%rsi        # 402ea1 <_IO_stdin_used+0x169>
  402b46:	ba 18 00 00 00       	mov    $0x18,%edx
  402b4b:	e8 70 f3 ff ff       	callq  401ec0 <Except_raise>
  402b50:	4d 85 e4             	test   %r12,%r12
  402b53:	7f 89                	jg     402ade <Mem_calloc+0x2e>
  402b55:	0f 1f 00             	nopl   (%rax)
  402b58:	48 8d 3d 69 12 20 00 	lea    0x201269(%rip),%rdi        # 603dc8 <Assert_Failed>
  402b5f:	48 8d 35 3b 03 00 00 	lea    0x33b(%rip),%rsi        # 402ea1 <_IO_stdin_used+0x169>
  402b66:	ba 19 00 00 00       	mov    $0x19,%edx
  402b6b:	e8 50 f3 ff ff       	callq  401ec0 <Except_raise>
  402b70:	e9 69 ff ff ff       	jmpq   402ade <Mem_calloc+0x2e>
  402b75:	0f 1f 00             	nopl   (%rax)
  402b78:	48 8d 3d 51 12 20 00 	lea    0x201251(%rip),%rdi        # 603dd0 <Mem_Failed>
  402b7f:	48 8d 35 1b 03 00 00 	lea    0x31b(%rip),%rsi        # 402ea1 <_IO_stdin_used+0x169>
  402b86:	ba 1e 00 00 00       	mov    $0x1e,%edx
  402b8b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  402b90:	e8 2b f3 ff ff       	callq  401ec0 <Except_raise>
  402b95:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  402b9a:	e9 4f ff ff ff       	jmpq   402aee <Mem_calloc+0x3e>
  402b9f:	90                   	nop

0000000000402ba0 <Mem_free>:
  402ba0:	48 85 ff             	test   %rdi,%rdi
  402ba3:	74 0b                	je     402bb0 <Mem_free+0x10>
  402ba5:	e9 a6 de ff ff       	jmpq   400a50 <free@plt>
  402baa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402bb0:	f3 c3                	repz retq 
  402bb2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402bb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000402bc0 <Mem_resize>:
  402bc0:	48 89 5c 24 e0       	mov    %rbx,-0x20(%rsp)
  402bc5:	48 89 6c 24 e8       	mov    %rbp,-0x18(%rsp)
  402bca:	48 89 d3             	mov    %rdx,%rbx
  402bcd:	4c 89 64 24 f0       	mov    %r12,-0x10(%rsp)
  402bd2:	4c 89 6c 24 f8       	mov    %r13,-0x8(%rsp)
  402bd7:	48 83 ec 38          	sub    $0x38,%rsp
  402bdb:	48 85 ff             	test   %rdi,%rdi
  402bde:	48 89 fd             	mov    %rdi,%rbp
  402be1:	49 89 f4             	mov    %rsi,%r12
  402be4:	41 89 cd             	mov    %ecx,%r13d
  402be7:	74 7f                	je     402c68 <Mem_resize+0xa8>
  402be9:	4d 85 e4             	test   %r12,%r12
  402bec:	7e 5a                	jle    402c48 <Mem_resize+0x88>
  402bee:	4c 89 e6             	mov    %r12,%rsi
  402bf1:	48 89 ef             	mov    %rbp,%rdi
  402bf4:	e8 17 df ff ff       	callq  400b10 <realloc@plt>
  402bf9:	48 85 c0             	test   %rax,%rax
  402bfc:	74 22                	je     402c20 <Mem_resize+0x60>
  402bfe:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  402c03:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
  402c08:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
  402c0d:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
  402c12:	48 83 c4 38          	add    $0x38,%rsp
  402c16:	c3                   	retq   
  402c17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402c1e:	00 00 
  402c20:	48 85 db             	test   %rbx,%rbx
  402c23:	74 63                	je     402c88 <Mem_resize+0xc8>
  402c25:	48 8d 3d a4 11 20 00 	lea    0x2011a4(%rip),%rdi        # 603dd0 <Mem_Failed>
  402c2c:	44 89 ea             	mov    %r13d,%edx
  402c2f:	48 89 de             	mov    %rbx,%rsi
  402c32:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  402c37:	e8 84 f2 ff ff       	callq  401ec0 <Except_raise>
  402c3c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  402c41:	eb bb                	jmp    402bfe <Mem_resize+0x3e>
  402c43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402c48:	48 8d 3d 79 11 20 00 	lea    0x201179(%rip),%rdi        # 603dc8 <Assert_Failed>
  402c4f:	48 8d 35 4b 02 00 00 	lea    0x24b(%rip),%rsi        # 402ea1 <_IO_stdin_used+0x169>
  402c56:	ba 2b 00 00 00       	mov    $0x2b,%edx
  402c5b:	e8 60 f2 ff ff       	callq  401ec0 <Except_raise>
  402c60:	eb 8c                	jmp    402bee <Mem_resize+0x2e>
  402c62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402c68:	48 8d 3d 59 11 20 00 	lea    0x201159(%rip),%rdi        # 603dc8 <Assert_Failed>
  402c6f:	48 8d 35 2b 02 00 00 	lea    0x22b(%rip),%rsi        # 402ea1 <_IO_stdin_used+0x169>
  402c76:	ba 2a 00 00 00       	mov    $0x2a,%edx
  402c7b:	e8 40 f2 ff ff       	callq  401ec0 <Except_raise>
  402c80:	e9 64 ff ff ff       	jmpq   402be9 <Mem_resize+0x29>
  402c85:	0f 1f 00             	nopl   (%rax)
  402c88:	48 8d 3d 41 11 20 00 	lea    0x201141(%rip),%rdi        # 603dd0 <Mem_Failed>
  402c8f:	48 8d 35 0b 02 00 00 	lea    0x20b(%rip),%rsi        # 402ea1 <_IO_stdin_used+0x169>
  402c96:	ba 30 00 00 00       	mov    $0x30,%edx
  402c9b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  402ca0:	e8 1b f2 ff ff       	callq  401ec0 <Except_raise>
  402ca5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  402caa:	e9 4f ff ff ff       	jmpq   402bfe <Mem_resize+0x3e>
  402caf:	90                   	nop

0000000000402cb0 <__libc_csu_init>:
  402cb0:	f3 0f 1e fa          	endbr64 
  402cb4:	41 57                	push   %r15
  402cb6:	49 89 d7             	mov    %rdx,%r15
  402cb9:	41 56                	push   %r14
  402cbb:	49 89 f6             	mov    %rsi,%r14
  402cbe:	41 55                	push   %r13
  402cc0:	41 89 fd             	mov    %edi,%r13d
  402cc3:	41 54                	push   %r12
  402cc5:	4c 8d 25 ec 10 20 00 	lea    0x2010ec(%rip),%r12        # 603db8 <__frame_dummy_init_array_entry>
  402ccc:	55                   	push   %rbp
  402ccd:	48 8d 2d ec 10 20 00 	lea    0x2010ec(%rip),%rbp        # 603dc0 <__init_array_end>
  402cd4:	53                   	push   %rbx
  402cd5:	4c 29 e5             	sub    %r12,%rbp
  402cd8:	48 83 ec 08          	sub    $0x8,%rsp
  402cdc:	e8 37 dd ff ff       	callq  400a18 <_init>
  402ce1:	48 c1 fd 03          	sar    $0x3,%rbp
  402ce5:	74 1f                	je     402d06 <__libc_csu_init+0x56>
  402ce7:	31 db                	xor    %ebx,%ebx
  402ce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402cf0:	4c 89 fa             	mov    %r15,%rdx
  402cf3:	4c 89 f6             	mov    %r14,%rsi
  402cf6:	44 89 ef             	mov    %r13d,%edi
  402cf9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  402cfd:	48 83 c3 01          	add    $0x1,%rbx
  402d01:	48 39 dd             	cmp    %rbx,%rbp
  402d04:	75 ea                	jne    402cf0 <__libc_csu_init+0x40>
  402d06:	48 83 c4 08          	add    $0x8,%rsp
  402d0a:	5b                   	pop    %rbx
  402d0b:	5d                   	pop    %rbp
  402d0c:	41 5c                	pop    %r12
  402d0e:	41 5d                	pop    %r13
  402d10:	41 5e                	pop    %r14
  402d12:	41 5f                	pop    %r15
  402d14:	c3                   	retq   

0000000000402d15 <.annobin___libc_csu_fini.start>:
  402d15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  402d1c:	00 00 00 00 

0000000000402d20 <__libc_csu_fini>:
  402d20:	f3 0f 1e fa          	endbr64 
  402d24:	c3                   	retq   

Disassembly of section .fini:

0000000000402d28 <_fini>:
  402d28:	f3 0f 1e fa          	endbr64 
  402d2c:	48 83 ec 08          	sub    $0x8,%rsp
  402d30:	48 83 c4 08          	add    $0x8,%rsp
  402d34:	c3                   	retq   
